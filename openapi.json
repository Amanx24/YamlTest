{
  "openapi": "3.0.0",
  "info": {
    "title": "ShiprocketAPI Documentation",
    "description": "Welcome to ShipRocket’s API Documentation. Get a clear understanding of all the sections and codes that are used in ShipRocket’s API. ShipRocket API uses the JSON syntax.\n\nFirst, you need to register with ShipRocket and create an account. Simply click on this [link](https://app.shiprocket.in/register) to complete the simple sign up process.\n\nPlease note that to utilize the ShipRocket API’s, you need to [upgrade](https://app.shiprocket.in/billing-plan-details) your plan to Advance or Pro. To get access to use the API’s, below the following steps:\n \n1. Navigate to Shiprocket Settings -> Company.\n2. Click on Generate API User Menu and then Click on Create API User.\n3. Please enter a Valid Email ID which is different from currently used registered email.\n4. Input an appropriate password.\n5. The next step will be to use the Authentication API in the given URL to Generate your Token for each request.\n\n ***API End-Point: https://apiv2.shiprocket.in*** \n\n **Steps to Use Shiprocket API's**\n1. Generate the token using the *Authentication API* **(/v1/external/auth/login)**.\n2. Authenticate the API's by passing the token in the headers of each request as ***'Authorization: Bearer token_value'***.\n 3. Create an Order using the *Create Custom Order API* **(/v1/external/orders/create/adhoc)**.\n4. Assign AWB using *AWB creation API* **(/v1/external/courier/assign/awb)**. \n5. Request for PickUp using the *Request PickUp API* **(/v1/external/courier/generate/pickup)**.\n 6. Track your shipment using *Tracking API* **(/v1/external/track/awb/{awb_code}).**\n \nFor more queries you can drop an email to support@shiprocket.in .",
    "version": "2.0"
  },
  "servers": [
    {
      "url": "https://apiv2.shiprocket.in/"
    },
    {
      "url": "https://gmail.com/"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "Use this API to generate token"
    },
    {
      "name": "Create/Update Order",
      "description": "Use these API's to Create a new Order or Update the existing ones"
    },
    {
      "name": "Orders",
      "description": "Use these API's to get the details about the Orders"
    },
    {
      "name": "Shipments",
      "description": "Use these API's to get Shipment details"
    },
    {
      "name": "Couriers",
      "description": "Use these API's to Check Serviceability, Assign AWB or Request For PickUp."
    },
    {
      "name": "Label | Manifests | Invoice",
      "description": "Use These API's to Generate or Print Label, Manifest and Invoice"
    },
    {
      "name": "Wrapper API",
      "description": "Use this API to Create & Ship Order"
    },
    {
      "name": "Tracking",
      "description": "Use these API's to get the Tracking Details"
    },
    {
      "name": "Pickup Address",
      "description": "Use this API to get available PickUp Addresses"
    },
    {
      "name": "Products",
      "description": "Use these API's to get/update details about Products"
    },
    {
      "name": "Listings",
      "description": "Use these API's to get/update details of Product Listings"
    },
    {
      "name": "Channels",
      "description": "Use These API's to get details about Integrated Channels"
    },
    {
      "name": "Inventory",
      "description": "Use These API's to get/update details about Inventory"
    },
    {
      "name": "Statement",
      "description": "Use this API to get transaction details of your SR account"
    },
    {
      "name": "Discrepancy",
      "description": "Use this API to get details of Weight Descripancy raised"
    },
    {
      "name": "File Imports",
      "description": "Use this API to get details of file Imports"
    },
    {
      "name": "Countries",
      "description": "Use these API's to get Countries & details"
    }
  ],
  "paths": {
    "/v1/external/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Use this API to generate your Authentication token.",
        "description": "The token is the authorization key that you need to pass before using the ShipRocket API's. \n\nGenerating the token is an extremely simple process. Simply type in your email id (alternate id for the ShipRocket API) and all your details will be generated.\n \n| Steps to Use Token\n  -----|\n 1. Copy the ***Token*** recieved in Response. \n2. Click on ***Authorize*** Button.\n3. Type ***Bearer &lt;token&gt;*** in the ***Value***.\n4. Click on ***Authorize*** and close the pop-up.\n5. Now you can use all the api's.\n\n Note: ***The token is valid for 4 days. Post that you have to regenerate the token.***",
        "operationId": "Get token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400Error"
                }
              }
            }
          },
          "422": {
            "description": "invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/login422Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/external/countries": {
      "get": {
        "tags": [
          "Countries"
        ],
        "summary": "Countries",
        "description": "Shows all the countries which are present in the ShipRocket database. ShipRocket API provides ISO Code 2 and ISO Code 3 country options and has a total of 44 countries in its database. This allows you to use these countries in your own dropdown menu.",
        "operationId": "Get countries",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCountriesResponse"
                }
              }
            }
          },
          "405": {
            "description": "method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/405Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/external/countries/show/{id}": {
      "get": {
        "tags": [
          "Countries"
        ],
        "summary": "Get all zones",
        "description": "Shows all the zones which are present within a country.",
        "operationId": "Get zones",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The specific id of the country in integer format",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Name of the specific zone",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetZonesResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/external/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get Products",
        "description": "Shows all the details of all the products that a ShipRocket user has. This can be filtered according to details like number of products per page, ascending or descending sorting order. ",
        "operationId": "Get products",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page number which is to be displayed",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "The total number of products in each page",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Whether to arrange the items in ascending or descending order(DESC, ASC)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "Allows to choose the value field by which the items will be sorted. Could be sorted by id, by sku, time created etc.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Value by which the results will be filtered",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter_by",
            "in": "query",
            "description": "Validation of filtered value (data to be matched)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProductsResponse"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Add new Products",
        "description": "Add new product",
        "operationId": "Add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "invalid data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/addProduct422"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/products/show/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Show",
        "description": "Shows individual product details",
        "operationId": "Show",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id = The product id which is to be shown and the input should be in an integer format",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid product id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/show400"
                }
              }
            }
          },
          "404": {
            "description": "no id provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/products/import": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Bulk import",
        "description": "This section shows the API for exporting the data of all your product and inventory details from the ShipRocket panel.",
        "operationId": "Bulk import",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productImportResponse"
                }
              }
            }
          },
          "403": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/import403"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/products/export": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Bulk Sample",
        "description": "Downloads all Products Details in CSV format",
        "operationId": "Bulk export",
        "responses": {
          "200": {
            "description": "import succes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bulkExportResponse"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/export401"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/products/sample": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get a sample format to Import Products",
        "description": "Export a sample CSV file for importing",
        "operationId": "Bulk sample",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/settings/company/pickup": {
      "get": {
        "tags": [
          "Pickup Address"
        ],
        "summary": "Get All Pickup locations",
        "description": "Get Your pickup locations",
        "operationId": "get pickup locations",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPickupResponse"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/export401"
                }
              }
            }
          },
          "405": {
            "description": "method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/405Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/settings/company/addpickup": {
      "post": {
        "tags": [
          "Pickup Address"
        ],
        "summary": "Add a new pickup location",
        "description": "Add a new pickup location",
        "operationId": "add pickup location",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "address",
                  "address_2",
                  "city",
                  "country",
                  "email",
                  "name",
                  "phone",
                  "pickup_location",
                  "pin_code",
                  "state"
                ],
                "properties": {
                  "pickup_location": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string",
                    "description": "length 8 characters"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "integer"
                  },
                  "address": {
                    "type": "string",
                    "description": "max 80 characters"
                  },
                  "address_2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "pin_code": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddPickupResponse"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/export401"
                }
              }
            }
          },
          "405": {
            "description": "method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/405Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/listings": {
      "get": {
        "tags": [
          "Listings"
        ],
        "summary": "Get all Listings",
        "description": "Get a JSON representation of all listings",
        "operationId": "Get all",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the data which is to be displayed",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of channel orders listed in each page",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The order in which the listings should be sorted",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "Allows to choose the value field by which the items will be sorted. Could be sorted by id, by sku, time created etc.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Value by which the results will be filtered",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter_by",
            "in": "query",
            "description": "Validation of filtered value (data to be matched)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllResponse"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/export401"
                }
              }
            }
          },
          "405": {
            "description": "method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/405Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/listings/import": {
      "post": {
        "tags": [
          "Listings"
        ],
        "summary": "Import Catalog mappings",
        "description": "Import CSV containing channel catalog to master catalog mappings",
        "operationId": "Bulk import1",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "File required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listing400"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/export401"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/listings/export/mapped": {
      "get": {
        "tags": [
          "Listings"
        ],
        "summary": "Export Mapped",
        "description": "Export mapped- Downloads the list of mapped items in the channel catalog sheet. After mapping items you can see the number of products of one channel, which are present in the Master Catalog.",
        "operationId": "Export mapped",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bulkExportResponse"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/export401"
                }
              }
            }
          },
          "405": {
            "description": "method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/405Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/listings/export/unmapped": {
      "get": {
        "tags": [
          "Listings"
        ],
        "summary": "Export Unmapped",
        "description": "Downloads the list of unmapped items in the channel catalog sheet.",
        "operationId": "Export un-mapped",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bulkExportResponse"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/export401"
                }
              }
            }
          },
          "405": {
            "description": "method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/405Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/listings/sample": {
      "get": {
        "tags": [
          "Listings"
        ],
        "summary": "Export sample",
        "description": "Downloads a sample of the catalog sheet.",
        "operationId": "Export sample",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bulkExportResponse"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/export401"
                }
              }
            }
          },
          "405": {
            "description": "method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/405Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/listings/link": {
      "post": {
        "tags": [
          "Listings"
        ],
        "summary": "Map",
        "description": "This API helps you map your channel product to a product present in master catalog",
        "operationId": "Map",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MapRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Linking success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Input not Defined",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400Error"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/export401"
                }
              }
            }
          },
          "405": {
            "description": "method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/405Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get all orders",
        "description": "The ShipRocket API for getting all the orders of a single seller. In this API the product and shipment activities will have sub arrays for individual products and shipments.\n **Filter values:** \n\n filter_by | filter | description \n ---- | ---- | ---- \n **payment_method** | | \n -> | cod | cash on delivery orders \n -> | Prepaid |  for prepaid orders\n **status** | |\n -> | 1 | New \n -> | 2 | Invoiced \n -> | 3 | Ready To Ship \n -> | 4 | Pickup Scheduled \n -> | 5 | Cancelled \n -> | 6 | Shipped \n -> | 7 | Delivered \n -> | 8 | e-Payment Failed \n -> | 9 | Returned \n -> | 10 | Unmapped \n -> | 11 | Out of Stock \n -> | 12 | Pickup Queued \n -> | 13 | Pickup Rescheduled \n -> | 14 | Pickup error// Created when there is an error on pickup schedule \n -> | 15 | RTO initiated \n -> | 16 | RTO delivered \n -> | 17 | RTO Acknowledged \n -> | 18 | Cancellation Request \n -> | 19 | Out for Delivery \n -> | 20 | In Transit",
        "operationId": "Get all orders",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number of data to display",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of orders to get per request",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort type (DESC, ASC)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "Field to sort by (id, status)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "To date",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "From date",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter_by",
            "in": "query",
            "description": "Field to filter by",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search for AWB or Channel Order ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrdersResponse"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/export401"
                }
              }
            }
          },
          "405": {
            "description": "method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/405Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/orders/show/{id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get order Details",
        "description": "Get order and shipment details",
        "operationId": "Get order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The order id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrderResponse"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/export401"
                }
              }
            }
          },
          "405": {
            "description": "method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/405Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/orders/fetch": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Fetch Orders from channel into Shiprocet App",
        "description": "Starts a background job which will fetch orders from all channels.",
        "operationId": "Fetch orders",
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/export401"
                }
              }
            }
          },
          "405": {
            "description": "method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/405Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/orders/status": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Sync status",
        "description": "This API runs a status sync which pulls out the changes in order status and syncs them in the panel",
        "operationId": "Sync status",
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/export401"
                }
              }
            }
          },
          "405": {
            "description": "method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/405Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/orders/create/adhoc": {
      "post": {
        "tags": [
          "Create/Update Order"
        ],
        "summary": "Create Custom order",
        "description": "Pass all the required order fields to create a quick order. Quick order are the ones where we do not store the product details in master catalog.",
        "operationId": "Create Custom order",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQuickOrderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateQuickOrderResponse"
                }
              }
            }
          },
          "403": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/import403"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/orders/create": {
      "post": {
        "tags": [
          "Create/Update Order"
        ],
        "summary": "Create Channel Order",
        "description": "Shows the details of the order which needs to be created",
        "operationId": "Create linked order.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLinkedOrderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateLinkedOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/import403"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/orders/address/pickup": {
      "patch": {
        "tags": [
          "Create/Update Order"
        ],
        "summary": "Change pikcup address",
        "description": "Charge the pickup address of an/multiple order/s.",
        "operationId": "ChangePickUpAddress",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePickUpRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Address updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangePickUpResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/orders/fulfill": {
      "patch": {
        "tags": [
          "Create/Update Order"
        ],
        "summary": "Add inventory for order product",
        "description": "This API allows you to add inventory for order product by passing the order id and order product id",
        "operationId": "Fulfillment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FulfillmentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FulfillmentResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/export401"
                }
              }
            }
          },
          "405": {
            "description": "method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/405Error"
                }
              }
            }
          },
          "422": {
            "description": "#/definitions/login422Error",
            "content": {}
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/orders/mapping": {
      "patch": {
        "tags": [
          "Create/Update Order"
        ],
        "summary": "Map orders products",
        "description": "Map unmapped order products",
        "operationId": "Mapping",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MappingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MappingResponse"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/export401"
                }
              }
            }
          },
          "405": {
            "description": "method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/405Error"
                }
              }
            }
          },
          "422": {
            "description": "#/definitions/login422Error",
            "content": {}
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/orders/print/invoice": {
      "post": {
        "tags": [
          "Label | Manifests | Invoice"
        ],
        "summary": "Generate Invoice",
        "description": "Generates an invoice for an order through the **order id**. You can pass multiple order id’s as well, to generate their response",
        "operationId": "Generate invoice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateInvoiceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GenerateInvoiceResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/export401"
                }
              }
            }
          },
          "405": {
            "description": "method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/405Error"
                }
              }
            }
          },
          "422": {
            "description": "#/definitions/login422Error",
            "content": {}
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/orders/address/update": {
      "post": {
        "tags": [
          "Create/Update Order"
        ],
        "description": "Update the customer’s delivery address by passing the order id in the given below API",
        "operationId": "Change address",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeAddressRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Address updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/orders/cancel": {
      "post": {
        "tags": [
          "Create/Update Order"
        ],
        "summary": "Cancel an order",
        "description": "Cancel the orders by passing their order ID’s in the given below API.",
        "operationId": "Cancel orders",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelOrdersRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Order cancel request taken",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelOrdersResponse"
                }
              }
            }
          },
          "204": {
            "description": "unprocessable input",
            "content": {}
          },
          "401": {
            "description": "unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/export401"
                }
              }
            }
          },
          "405": {
            "description": "method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/405Error"
                }
              }
            }
          },
          "422": {
            "description": "Invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/login422Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/orders/export": {
      "post": {
        "tags": [
          "Orders"
        ],
        "description": "Displays the URL of the CSV sheet of downloaded orders as a response",
        "operationId": "Export orders",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bulkExportResponse"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/export401"
                }
              }
            }
          },
          "405": {
            "description": "method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/405Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/orders/print/manifest": {
      "post": {
        "tags": [
          "Label | Manifests | Invoice"
        ],
        "summary": "Get manifest",
        "description": "Prints the manifest of the order id on the assumption that the manifest is created",
        "operationId": "Get manifests",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetManifestsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetManifestsResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/export401"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404Error"
                }
              }
            }
          },
          "405": {
            "description": "method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/405Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/manifests/print": {
      "post": {
        "tags": [
          "Label | Manifests | Invoice"
        ],
        "description": "Use this API to Get manifest of Orders on Individual level",
        "operationId": "print individual manifest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/printManifestRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/printManifestResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/manifests/generate": {
      "post": {
        "tags": [
          "Label | Manifests | Invoice"
        ],
        "summary": "Generate Manifests",
        "description": "Generate Manifests for single order or bulk orders.\n\n&lowast;***This should be used if print manifest doesn't return any URL***&lowast;",
        "operationId": "generate manifest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/generateManifestRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Manifests generated Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generateManifestResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/orders/import": {
      "post": {
        "tags": [
          "Create/Update Order"
        ],
        "summary": "Bulk Import",
        "description": "Import orders in bulk to your Shiprocket panel from a csv file",
        "operationId": "Bulk import2",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/orders/sample": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get sample format for Orders Import",
        "description": "Get sample format for Orders Import excel file",
        "operationId": "Bulk sample1",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/errors/{id}/check": {
      "get": {
        "tags": [
          "File Imports"
        ],
        "summary": "Get file import results from Bulk order, products, listing imports.",
        "description": "Check Import Response",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fileImportResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/shipments": {
      "get": {
        "tags": [
          "Shipments"
        ],
        "summary": "Get shipment Details",
        "description": "Get details of all shipments\n\nBelow are the order status codes used: \n \n  Status Code | Description\n  ----- | -----\n  1 | Awb Assigned\n 2 | Label Generated\n 3 | Pickup Scheduled/Generated\n 4 | Pickup Queued\n 5 | Manifest Generated\n 6 | Shipped\n 7 | Delivered\n 8 | Cancelled\n 9 | RTO Initiated\n 10 | RTO Delivered\n 11 | Pending\n 12 | Lost\n 13 | Pickup Error\n 14 | RTO Acknowledged\n 15 | Pickup Rescheduled\n  16 | Cancellation Requested\n 17 | Out For Delivery\n 18 | In Transit\n 19 | Out For Pickup\n 20 | Pickup Exception\n 21 | Undelivered\n 22 | Delayed\n",
        "operationId": "Get all shipments",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "Sort type (DESC, ASC)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "Field to sort by",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter_by",
            "in": "query",
            "description": "Field to filter by",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipmentsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/shipments/{id}": {
      "get": {
        "tags": [
          "Shipments"
        ],
        "summary": "Get shipment Details of specific orders",
        "description": "Get details of specified shipment ID",
        "operationId": "Details",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The shipment id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/inventory": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Get Details of orders with inventories",
        "description": "Checks the availability of inventory according to the SKU",
        "operationId": "Get inventories",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page number which is to be displayed",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "The total number of products in each page in an integer format",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Whether to arrange the items in ascending or descending order",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "Allows to choose the value field by which the items will be sorted. Could be sorted by id, by sku, time created etc.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInventoriesResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/inventory/{id}/update": {
      "put": {
        "tags": [
          "Inventory"
        ],
        "summary": "Update Inventory",
        "description": "Through this API you can make changes to the inventory listings in your ShipRocket panel",
        "operationId": "Update inventory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "You have to pass the product id of the inventory which is to be updated",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "The specific number which needs to be changed",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "action",
            "in": "query",
            "description": "Added = The number is added to the inventory\nReplace = The original number is replaced by the specific number\nRemove = The specific number is deducted from the opening number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateInventoryResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/channels": {
      "get": {
        "tags": [
          "Channels"
        ],
        "summary": "Get all channels",
        "description": "The ShipRocket API for getting the data of all integrated channels in the ShipRocket account. ",
        "operationId": "Get all2",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/channelsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/courier/serviceability/": {
      "get": {
        "tags": [
          "Couriers"
        ],
        "summary": "Check Serviceability",
        "description": "Check for the list of available courier companies between pickup & delivery postcodes, along with the estimated delivery time in days and shipping charges. Here is the list of Courier Companies along with their id's:  \n\n Courier Name | Courier Id\n ----- | ----- \n BLUEDART | 1\n FEDEX | 2\n FEDEX PACKAGING* | 7\n DHL PACKET INTERNATIONAL* | 8\n DELHIVERY | 10\n FEDEX SURFACE | 12\n ECOMEXP | 14\nDOTZOT | 16\n XPRESSBEES | 33\n ARAMEX INTERNATIONAL* | 35 \n FEDEX YOUR PACK* | 36\n DHL PACKET PLUS* | 37\n DHL PARCEL DIRECT* | 38\n DELHIVERY SURFACE | 39\n GATI SURFACE | 40\n FEDEX FLAT RATE | 41\n FEDEX SURFACE LIGHT | 42\n DELHIVERY SURFACE STANDAR | 43\n DELHIVERY SURFACE LITE | 44\n ECOMEXP REVERSE** | 45\n SHADOW FAX REVERSE** | 46\n ECOM INTERNATIONAL* | 47\n *marked ouriers are for International Shipments\n **  marked Couriers are for return Shipments",
        "operationId": "Check serviceability",
        "parameters": [
          {
            "name": "pickup_postcode",
            "in": "query",
            "description": "The pincode of the location from where the shipment is supposed to be picked up, in an integer format",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "delivery_postcode",
            "in": "query",
            "description": "The pincode of the location where the shipment is supposed to be delivered, in an integer format",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "length",
            "in": "query",
            "description": "Length in meters",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "breadth",
            "in": "query",
            "description": "breadth in meters",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "height",
            "in": "query",
            "description": "height in meters",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "weight",
            "in": "query",
            "description": "Shipment weight, in kgs",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cod",
            "in": "query",
            "description": "If cash on delivery is required or not. Required =1, Prepaid =0",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "declared_value",
            "in": "query",
            "description": "Price of the order",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "Surface/Air",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_id",
            "in": "query",
            "description": "Order id of the shipment",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of serviceable courier compnies along with pricing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckServiceabilityResponse"
                }
              }
            }
          },
          "404": {
            "description": "Postcode is not serviceable by SHIPROCKET",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckServiceabilityError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/courier/international/serviceability": {
      "get": {
        "tags": [
          "Couriers"
        ],
        "summary": "International Serviceability Check",
        "description": "Check the shipping serviceability options for international orders",
        "operationId": "International Serviceability Check",
        "parameters": [
          {
            "name": "weight",
            "in": "query",
            "description": "Approx weight of the shipment",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cod",
            "in": "query",
            "description": "it must be 0, COD orders are not serviceable for international shipping",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "delivery_country",
            "in": "query",
            "description": "Destination Country CODE (alpha-2 code), for example, US for United State",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_id",
            "in": "query",
            "description": "In case the order is already created, pass the shiprocket order id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pickup_postcode",
            "in": "query",
            "description": "In case you got a different pickup postcode other than that of Primary pickup address",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternationalServiceabilityResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/courier/assign/awb": {
      "post": {
        "tags": [
          "Couriers"
        ],
        "summary": "AWB Creation",
        "description": "The ShipRocket API for generating the Air Waybill number for your shipment. You can get a single AWB. It also gives you the option to reassign the AWB number",
        "operationId": "Awb Creation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AwbCreationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AwbCreationResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AwbError500"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/courier/generate/pickup": {
      "post": {
        "tags": [
          "Couriers"
        ],
        "summary": "Request for PickUp",
        "description": "The API returns the pickup status along with the estimated pickup time. You have to call the generate Manifest API after the success response of this API.",
        "operationId": "Pickup creation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PickupCreationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PickupCreationResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/courier/generate/label": {
      "post": {
        "tags": [
          "Label | Manifests | Invoice"
        ],
        "summary": "Generate Label",
        "description": "Get a label URL. Note:- For label URL, AWB code must be assigned on shipment id.",
        "operationId": "Generate Label",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateLabelRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateLabelResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/courier/track/awb/{awb_code}": {
      "get": {
        "tags": [
          "Tracking"
        ],
        "summary": "Get AWB tracking Details",
        "description": "Get a JSON of tracking data by AWB. \n \n Shipment Status | Description\n  ----- | -----\n  1 | Awb Assigned\n 2 | Label Generated\n 3 | Pickup Scheduled/Generated\n 4 | Pickup Queued\n 5 | Manifest Generated\n 6 | Shipped\n 7 | Delivered\n 8 | Cancelled\n 9 | RTO Initiated\n 10 | RTO Delivered\n 11 | Pending\n 12 | Lost\n 13 | Pickup Error\n 14 | RTO Acknowledged\n 15 | Pickup Rescheduled\n  16 | Cancellation Requested\n 17 | Out For Delivery\n 18 | In Transit\n 19 | Out For Pickup\n 20 | Pickup Exception\n 21 | Undelivered\n 22 | Delayed\n",
        "operationId": "AWB Tracking",
        "parameters": [
          {
            "name": "awb_code",
            "in": "path",
            "description": "awb code",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AwbTrackingResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/courier/track/shipment/{shipment_id}": {
      "get": {
        "tags": [
          "Tracking"
        ],
        "summary": "Get shipment Tracking Details",
        "description": "Get a JSON of tracking data by Shipment id. \n \n Shipment Status | Description\n  ----- | -----\n  1 | Awb Assigned\n 2 | Label Generated\n 3 | Pickup Scheduled/Generated\n 4 | Pickup Queued\n 5 | Manifest Generated\n 6 | Shipped\n 7 | Delivered\n 8 | Cancelled\n 9 | RTO Initiated\n 10 | RTO Delivered\n 11 | Pending\n 12 | Lost\n 13 | Pickup Error\n 14 | RTO Acknowledged\n 15 | Pickup Rescheduled\n  16 | Cancellation Requested\n 17 | Out For Delivery\n 18 | In Transit\n 19 | Out For Pickup\n 20 | Pickup Exception\n 21 | Undelivered\n 22 | Delayed\n",
        "operationId": "Shipment Tracking",
        "parameters": [
          {
            "name": "shipment_id",
            "in": "path",
            "description": "Shipment ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipmentTrackingResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/billing/discrepancy": {
      "get": {
        "tags": [
          "Discrepancy"
        ],
        "summary": "Get discrepancy Details",
        "description": "Get discrepancy data",
        "operationId": "Discrepancy",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscrepancyResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/account/details/statement": {
      "get": {
        "tags": [
          "Statement"
        ],
        "summary": "Get statement Details",
        "description": "Get statements data",
        "operationId": "Satement",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number of data to display",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of orders to get per request",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "To date",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "From date",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search for AWB or Channel Order ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "export",
            "in": "query",
            "description": "Export the data in csv format",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatementResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/shipments/create/forward-shipment": {
      "post": {
        "tags": [
          "Wrapper API"
        ],
        "summary": "Create and Ship Order along with label & manifest generation",
        "description": "Create and Ship Order along with label & manifest generation",
        "operationId": "forward-shipment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateForwardOrderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateForwardOrderResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/external/courier/track/awbs": {
      "post": {
        "tags": [
          "Couriers"
        ],
        "summary": "Get tracking data for multiple awbs upto 50 awbs at once",
        "description": "Get tracking data for multiple awbs",
        "operationId": "bulk-tracking",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkTrackingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkTrackingResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "GetManifestsResponse": {
        "title": "Get manifests response",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "Displays the url of a pdf file with the manifest",
            "items": {
              "type": "string",
              "example": "https://s3-ap-southeast-1.amazonaws.com/kr-multichannel/1/manifest/MAN-00212.pdf"
            }
          }
        }
      },
      "GetTokenRequest": {
        "title": "Get token request",
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Prompts the user to type their email id",
            "example": "abcd@xyz.com"
          },
          "password": {
            "type": "string",
            "description": "Prompts the user to type their selected password",
            "example": "abcd1234"
          }
        }
      },
      "AddPickupResponse": {
        "title": "Add a new Pickup Address",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "MappingResponse": {
        "title": "Mapping response",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "status_code": {
              "type": "integer",
              "format": "int32",
              "example": 0
            },
            "data": {
              "type": "object",
              "properties": {
                "order_product_id": {
                  "type": "integer",
                  "example": 321
                },
                "master_sku": {
                  "type": "string",
                  "example": "H3HEDE"
                },
                "order_id": {
                  "type": "integer",
                  "example": 123
                }
              }
            },
            "success": {
              "type": "boolean",
              "example": false
            },
            "message": {
              "type": "string",
              "example": "No product found matching this master sku"
            }
          }
        }
      },
      "ChangePickUpRequest": {
        "title": "Request Format for change pickup address API",
        "required": [
          "order_id",
          "pickup_location"
        ],
        "type": "object",
        "properties": {
          "order_id": {
            "type": "array",
            "description": "The order id's to change the pickup location.",
            "example": [
              123,
              456,
              789
            ],
            "items": {
              "type": "integer"
            }
          },
          "pickup_location": {
            "type": "string",
            "description": "New pickup location name for the given orders",
            "example": "Primary"
          }
        }
      },
      "addProduct422": {
        "title": "unprocessable data",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "There were errors in adding new product!"
          },
          "errors": {
            "type": "object",
            "properties": {
              "name": {
                "type": "array",
                "example": "The name field is required.",
                "items": {
                  "type": "string"
                }
              },
              "type": {
                "type": "array",
                "example": "The type field is required.",
                "items": {
                  "type": "string"
                }
              },
              "sku": {
                "type": "array",
                "example": "The sku field is required.",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "status_code": {
            "type": "integer",
            "example": 422
          }
        }
      },
      "PickupCreationResponse": {
        "title": "Pickup creation response",
        "type": "object",
        "properties": {
          "pickup_status": {
            "type": "integer",
            "description": "Status if the package has been picked up or not",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": ""
          },
          "response": {
            "type": "object",
            "properties": {
              "data": {
                "type": "string"
              }
            },
            "description": ""
          },
          "manifest_url": {
            "type": "string",
            "description": "Url of the pdf file which shows the pickup manifest which has been created"
          }
        }
      },
      "FulfillmentRequest": {
        "title": "Fulfillment request",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "order_product_id": {
                  "type": "integer",
                  "example": 321
                },
                "quantity": {
                  "type": "string",
                  "example": "1"
                },
                "action": {
                  "type": "string",
                  "example": "add"
                },
                "order_id": {
                  "type": "integer",
                  "example": 123
                }
              }
            }
          }
        }
      },
      "DetailsResponse": {
        "title": "Details response",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {}
          }
        }
      },
      "channelsResponse": {
        "title": "get channels response",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "settings": {
                  "type": "object",
                  "properties": {
                    "order_status": {
                      "type": "string",
                      "description": "",
                      "example": "Pending, COD"
                    },
                    "weight": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "dimensions": {
                      "type": "string",
                      "description": "",
                      "example": "0x0x0"
                    }
                  },
                  "description": "Channel Settings"
                },
                "orders_sync": {
                  "type": "integer",
                  "description": "Syncing On / Off",
                  "example": 1
                },
                "orders_synced_on": {
                  "type": "string",
                  "description": "Last Order Sync date or some message",
                  "example": "13 Apr 11:15 AM"
                },
                "base_channel": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "",
                      "example": "CS"
                    },
                    "settings_sample": {
                      "type": "object",
                      "properties": {
                        "help": {
                          "type": "string",
                          "description": "",
                          "example": "help"
                        },
                        "settings": {
                          "type": "array",
                          "description": "",
                          "items": {
                            "type": "object",
                            "properties": {
                              "order_status": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "description": "",
                                    "example": "order_status"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name for reference",
                                    "example": "Status to fetch"
                                  },
                                  "placeholder": {
                                    "type": "string",
                                    "description": "",
                                    "example": "processing, on-hold etc"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "",
                                    "example": "text"
                                  }
                                },
                                "description": ""
                              }
                            }
                          }
                        },
                        "name": {
                          "type": "string",
                          "description": "",
                          "example": "Channel Settings"
                        }
                      },
                      "description": ""
                    },
                    "name": {
                      "type": "string",
                      "description": "Channel Name",
                      "example": "Manual"
                    },
                    "logo": {
                      "type": "string",
                      "description": "Logo for channel",
                      "example": "channel.png"
                    },
                    "description": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "id": {
                      "type": "integer",
                      "description": "",
                      "example": 4
                    },
                    "type": {
                      "type": "string",
                      "description": "type of channel",
                      "example": "Carts"
                    },
                    "auth_sample": {
                      "type": "object",
                      "properties": {
                        "api_info": {
                          "type": "object",
                          "properties": {
                            "help": {
                              "type": "string",
                              "description": "",
                              "example": "Provide credentials to integrate the channel"
                            },
                            "settings": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "description": ""
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": ""
                                  },
                                  "placeholder": {
                                    "type": "string",
                                    "description": ""
                                  }
                                },
                                "example": [
                                  {
                                    "code": "store_url",
                                    "name": "Store Url",
                                    "placeholder": "e.g. https://abc/example.com"
                                  },
                                  {
                                    "code": "api_username",
                                    "name": "API Username",
                                    "placeholder": "a1b2c3d4"
                                  },
                                  {
                                    "code": "api_key",
                                    "name": "api key",
                                    "placeholder": "abcd1234"
                                  }
                                ]
                              }
                            },
                            "name": {
                              "type": "string",
                              "description": "",
                              "example": "Manual"
                            }
                          },
                          "description": ""
                        }
                      },
                      "description": "The various keys required for the channel integration"
                    }
                  },
                  "description": ""
                },
                "auth": {
                  "type": "array",
                  "description": "",
                  "items": {
                    "type": "object",
                    "properties": {
                      "api_username": {
                        "type": "string",
                        "example": "Hell0W012Ld"
                      },
                      "api_key": {
                        "type": "string",
                        "description": "",
                        "example": "helloworld"
                      },
                      "store_url": {
                        "type": "string",
                        "description": "store web address",
                        "example": "https://test.example.com"
                      }
                    }
                  }
                },
                "name": {
                  "type": "string",
                  "description": "",
                  "example": "Manual"
                },
                "inventory_sync": {
                  "type": "integer",
                  "description": "Inventory Sync On / Off",
                  "example": 0
                },
                "base_channel_code": {
                  "type": "string",
                  "description": "The two letter code for the respective channels. Please note that the “Manual” channel",
                  "example": "CS"
                },
                "id": {
                  "type": "integer",
                  "description": "The respective channel id’s of the various channels which are to be integrated with the ShipRocket panel.",
                  "example": 1234
                },
                "inventory_synced_on": {
                  "type": "string",
                  "description": "Last Inventory Sync date or some message",
                  "example": "13 Apr 11:15 AM"
                },
                "connections": {
                  "type": "integer",
                  "description": "",
                  "example": 1
                },
                "status": {
                  "type": "string",
                  "description": "",
                  "example": "Active"
                }
              }
            }
          }
        }
      },
      "AddRequest": {
        "title": "Add request",
        "required": [
          "brand",
          "category_code",
          "color",
          "components",
          "cost_price",
          "description",
          "ean",
          "height",
          "image_url",
          "imei_serialnumber",
          "isbn",
          "length",
          "low_stock",
          "mrp",
          "name",
          "qty",
          "size",
          "sku",
          "status",
          "tax_code",
          "type",
          "upc",
          "weight",
          "width"
        ],
        "type": "object",
        "properties": {
          "sku": {
            "type": "string",
            "description": "Stock Keeping Unit or the identification unit of an individual product (generally alphanumeric)",
            "example": "Toys"
          },
          "HSN": {
            "type": "string",
            "description": "Harmonised System Nomenclature. A code number used to classify goods for taxation purposes. Done to determine which category of taxes do the goods come under",
            "example": "1234cdhc"
          },
          "name": {
            "type": "string",
            "description": "Name of the product",
            "example": "SuperMan"
          },
          "tax_code": {
            "type": "string",
            "description": "The percentage of tax which is to be imposed",
            "example": "default"
          },
          "type": {
            "type": "string",
            "description": "If there is only one product or multiple types of products",
            "example": "Single"
          },
          "qty": {
            "type": "integer",
            "description": "Total Quantity of the products to be shipped",
            "example": 10
          },
          "low_stock": {
            "type": "string",
            "description": "Specifies when the low stock notification should come on",
            "example": ""
          },
          "category_code": {
            "type": "string",
            "description": "You can add a category code to your ShipRocket account from “add category”",
            "example": "default"
          },
          "description": {
            "type": "string",
            "description": "Gives a description of the product",
            "example": ""
          },
          "brand": {
            "type": "string",
            "description": "The product brand name",
            "example": ""
          },
          "size": {
            "type": "integer",
            "description": ""
          },
          "weight": {
            "type": "integer",
            "description": "Total weight of the products"
          },
          "length": {
            "type": "integer",
            "description": "Product Dimensions"
          },
          "width": {
            "type": "integer",
            "description": "Product Dimensions"
          },
          "height": {
            "type": "integer",
            "description": "Product Dimensions"
          },
          "ean": {
            "type": "string",
            "description": "European Article Number - A barcode for product identification (which helps manufacturers identify how many products have been sold once a sale is made) It is 13 digits long and required for international selling",
            "example": ""
          },
          "upc": {
            "type": "string",
            "description": "Universal Product Code – Barcode for product identification which is used across the world. It is 12 digits long ",
            "example": ""
          },
          "isbn": {
            "type": "string",
            "description": "International Standard Book Number – Identification barcode for books, magazines, e-books and other published media. It is 10 digits long",
            "example": ""
          },
          "color": {
            "type": "string",
            "description": "The colour of the product",
            "example": ""
          },
          "imei_serialnumber": {
            "type": "string",
            "description": "The International Mobile Equipment Identity Number, which is used by  a network to identify valid devices. Eg if two iphones have to be shipped they will have 2 Imei’s",
            "example": ""
          },
          "cost_price": {
            "type": "integer",
            "description": "How much it cost to make the product"
          },
          "mrp": {
            "type": "string",
            "description": "Maximum Retail Price. How much is the maximum price which the product can be sold at",
            "example": ""
          },
          "status": {
            "type": "integer",
            "description": "In Boolean, if the product details have been successfully or unsuccessfully added",
            "format": "int32",
            "example": 1
          },
          "image_url": {
            "type": "string",
            "description": "Shows the url of the product images which have been uploaded",
            "example": ""
          },
          "components": {
            "type": "array",
            "description": "An arrayed display of all the components",
            "items": {
              "type": "string",
              "example": ""
            }
          }
        }
      },
      "GenerateLabelRequest": {
        "title": "Generate Label request",
        "required": [
          "shipment_id"
        ],
        "type": "object",
        "properties": {
          "shipment_id": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "PickupCreationRequest": {
        "title": "Pickup creation request",
        "required": [
          "shipment_id"
        ],
        "type": "object",
        "properties": {
          "shipment_id": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "status": {
            "type": "string",
            "description": "Use this parameter to retry for pickup",
            "example": "retry"
          }
        }
      },
      "AwbCreationResponse": {
        "title": "Awb creation response",
        "required": [
          "awb_assign_status",
          "response"
        ],
        "type": "object",
        "properties": {
          "awb_assign_status": {
            "type": "integer",
            "description": "It will be 1, implying that the status has been assigned",
            "format": "int32"
          },
          "response": {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "courier_company_id": {
                    "type": "integer",
                    "description": "id of the courier company"
                  },
                  "freight_percentage": {
                    "type": "string",
                    "description": ""
                  },
                  "company_id": {
                    "type": "integer",
                    "description": ""
                  },
                  "shipment_id": {
                    "type": "integer",
                    "description": "Shipment id as generated in the shipment section"
                  },
                  "company_address_id": {
                    "type": "integer",
                    "description": ""
                  },
                  "flat_charges": {
                    "type": "string",
                    "description": ""
                  },
                  "applied_weight_amount": {
                    "type": "integer",
                    "description": ""
                  },
                  "assigned_date_time": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string",
                        "description": ""
                      },
                      "timezone": {
                        "type": "string",
                        "description": ""
                      },
                      "timezone_type": {
                        "type": "integer",
                        "description": ""
                      }
                    },
                    "description": ""
                  },
                  "awb_code_status": {
                    "type": "integer",
                    "description": ""
                  },
                  "cod": {
                    "type": "integer",
                    "description": "If there is COD then response =1, else it will be 0"
                  },
                  "awb_code": {
                    "type": "string",
                    "description": "The AWB code generated"
                  },
                  "id": {
                    "type": "integer",
                    "description": ""
                  },
                  "order_id": {
                    "type": "integer",
                    "description": "Order id as generated earlier"
                  },
                  "applied_weight": {
                    "type": "string",
                    "description": ""
                  }
                }
              }
            }
          }
        }
      },
      "AwbTrackingResponse": {
        "title": "AWB Tracking response",
        "required": [
          "tracking_data"
        ],
        "type": "object",
        "properties": {
          "tracking_data": {
            "type": "object",
            "properties": {
              "shipment_track": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "courier_company_id": {
                      "type": "integer",
                      "example": 10
                    },
                    "consignee_address": {
                      "type": "string",
                      "example": "123, ABD Street, Salem, Tamil Nadu"
                    },
                    "delivered_to": {
                      "type": "string",
                      "example": "NA"
                    },
                    "origin": {
                      "type": "string",
                      "example": "Chennai_Egmore_C (Tamil Nadu)"
                    },
                    "consignee_name": {
                      "type": "string",
                      "example": "John"
                    },
                    "destination": {
                      "type": "string",
                      "example": "Salem"
                    },
                    "description": {
                      "type": "string",
                      "example": "NA"
                    },
                    "weight": {
                      "type": "string",
                      "example": "NA"
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2016-11-04T10:00:30.000Z"
                    },
                    "contact_info": {
                      "type": "string",
                      "example": "9876543210"
                    },
                    "shipment_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "packages": {
                      "type": "integer",
                      "example": 0
                    },
                    "pickup_date": {
                      "type": "string",
                      "example": "2016-11-02T19:47:50.655Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "2016-11-05T20:00:24.000Z"
                    },
                    "service": {
                      "type": "string",
                      "example": "COD"
                    },
                    "current_status": {
                      "type": "string",
                      "example": "Delivered"
                    },
                    "id": {
                      "type": "integer",
                      "example": 44
                    },
                    "awb_code": {
                      "type": "string",
                      "example": "12345678"
                    },
                    "order_id": {
                      "type": "integer",
                      "example": 123
                    },
                    "delivered_date": {
                      "type": "string",
                      "example": "2016-11-05T14:29:38.002Z"
                    },
                    "shipment_type": {
                      "type": "string",
                      "example": "COD"
                    }
                  }
                }
              },
              "shipment_track_activities": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "date": {
                      "type": "string"
                    },
                    "activity": {
                      "type": "string"
                    },
                    "ship_track_id": {
                      "type": "integer"
                    },
                    "location": {
                      "type": "string"
                    },
                    "id": {
                      "type": "integer"
                    }
                  },
                  "example": {
                    "id": 972,
                    "ship_track_id": 44,
                    "date": "2016-11-05T14:29:38.000Z",
                    "location": "Salem (Tamil Nadu)",
                    "activity": "Delivered - Delivered to consignee"
                  }
                }
              },
              "track_status": {
                "type": "integer",
                "example": 1
              },
              "track_url": {
                "type": "string",
                "example": "https://app.shiprocket.in/tracking/awb/12345"
              },
              "shipment_status": {
                "type": "integer",
                "example": 7
              }
            }
          }
        }
      },
      "405Error": {
        "title": "Post method instead of Get or vice versa",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "method not allowed"
          },
          "status_code": {
            "type": "integer",
            "example": 405
          }
        }
      },
      "404Error": {
        "title": "404 not found",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "404 not found"
          },
          "status_code": {
            "type": "integer",
            "example": 404
          }
        }
      },
      "CancelOrdersRequest": {
        "title": "Cancel orders request",
        "required": [
          "ids"
        ],
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "description": "Mentions the order ids of the orders which are to be cancelled. If there are multiple orders then you can cancel them by just entering them in multiple lines"
      },
      "GetOrdersResponse": {
        "title": "Get All Orders Response",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "channel_name": {
                  "type": "string",
                  "example": "My Channel"
                },
                "status_code": {
                  "type": "integer",
                  "example": 1
                },
                "payment_status": {
                  "type": "string",
                  "example": "Pending"
                },
                "base_channel_code": {
                  "type": "string",
                  "example": "MC"
                },
                "customer_phone": {
                  "type": "string",
                  "example": "9876543210"
                },
                "sla": {
                  "type": "string",
                  "example": "2 days"
                },
                "created_at": {
                  "type": "string",
                  "example": "4 Sep 2017, 12:26 PM"
                },
                "tax": {
                  "type": "string",
                  "example": "0.00"
                },
                "channel_order_id": {
                  "type": "string",
                  "example": "Test1504508157347"
                },
                "channel_created_at": {
                  "type": "string",
                  "example": "4 Sep 2017, 12:26 PM"
                },
                "shipments": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "volumetric_weight": {
                        "type": "string",
                        "example": "0.5"
                      },
                      "isd_code": {
                        "type": "string",
                        "example": 91
                      },
                      "courier": {
                        "type": "string",
                        "example": "FedEx"
                      },
                      "return_awb": {
                        "type": "string",
                        "example": "321"
                      },
                      "weight": {
                        "type": "string",
                        "example": "0.5"
                      },
                      "id": {
                        "type": "integer",
                        "example": 123
                      },
                      "awb": {
                        "type": "string",
                        "example": "123"
                      },
                      "dimensions": {
                        "type": "string",
                        "example": "10x10x10"
                      }
                    }
                  }
                },
                "products": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "hsn": {
                        "type": "string",
                        "example": "54673478"
                      },
                      "quantity": {
                        "type": "integer",
                        "example": 1
                      },
                      "channel_order_product_id": {
                        "type": "integer",
                        "example": 456
                      },
                      "product_id": {
                        "type": "integer",
                        "example": 123
                      },
                      "name": {
                        "type": "string",
                        "example": "test product"
                      },
                      "available": {
                        "type": "string",
                        "example": "0"
                      },
                      "id": {
                        "type": "integer",
                        "example": 123
                      },
                      "channel_sku": {
                        "type": "string",
                        "example": "ABCD1234"
                      },
                      "status": {
                        "type": "string",
                        "example": "UNDEFINED"
                      }
                    }
                  }
                },
                "total": {
                  "type": "string",
                  "example": "100.00"
                },
                "expedited": {
                  "type": "string",
                  "example": "0"
                },
                "shipping_method": {
                  "type": "string",
                  "example": "SR"
                },
                "activities": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": ""
                  }
                },
                "customer_email": {
                  "type": "string",
                  "example": "test@gmail.com"
                },
                "id": {
                  "type": "integer",
                  "example": 123
                },
                "customer_name": {
                  "type": "string",
                  "example": "first last"
                },
                "purpose_of_shipment": {
                  "type": "integer",
                  "example": 0
                },
                "channel_id": {
                  "type": "integer",
                  "example": 456
                },
                "is_international": {
                  "type": "integer",
                  "example": 0
                },
                "payment_method": {
                  "type": "string",
                  "example": "Prepaid"
                },
                "status": {
                  "type": "string",
                  "example": "NEW"
                }
              }
            }
          }
        }
      },
      "show400": {
        "title": "invalid product id",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "This product is either inactive or does not exist"
          },
          "status_code": {
            "type": "integer",
            "example": 400
          }
        }
      },
      "AwbError500": {
        "title": "Awb creation error 500",
        "required": [
          "awb_assign_status"
        ],
        "type": "object",
        "properties": {
          "awb_assign_status": {
            "type": "string",
            "description": "Status if the code has been generated or not. In this case it would be a 0"
          },
          "data": {
            "type": "string",
            "description": "Passes a statement saying it is not possible"
          }
        }
      },
      "MapRequest": {
        "title": "Map request",
        "required": [
          "listing_id",
          "product_id"
        ],
        "type": "object",
        "properties": {
          "product_id": {
            "type": "integer",
            "description": "The item in the Master Catalogue",
            "format": "int32"
          },
          "listing_id": {
            "type": "integer",
            "description": "The item in the Channel Catalogue",
            "format": "int32"
          },
          "ID": {
            "type": "integer",
            "description": "Same id as placed in their respective GET codes"
          }
        }
      },
      "generateManifestRequest": {
        "title": "Generate Manifests Request",
        "required": [
          "shipment_id"
        ],
        "type": "object",
        "properties": {
          "shipment_id": {
            "type": "array",
            "items": {
              "type": "integer",
              "description": "id(s) of shipment(s)",
              "example": 123
            }
          }
        }
      },
      "GetManifestsRequest": {
        "title": "Get manifests request",
        "required": [
          "order_ids"
        ],
        "type": "object",
        "properties": {
          "order_ids": {
            "type": "array",
            "description": "Mentions the ids of the orders whose manifest is to be printed",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "CreateQuickOrderResponse": {
        "title": "Create quick order response",
        "required": [
          "status",
          "status_code"
        ],
        "type": "object",
        "properties": {
          "order_id": {
            "type": "integer",
            "example": 123
          },
          "shipment_id": {
            "type": "integer",
            "example": 546
          },
          "status": {
            "type": "string",
            "example": "NEW"
          },
          "status_code": {
            "type": "integer",
            "example": 1
          },
          "onboarding_completed_now": {
            "type": "integer",
            "example": 0
          },
          "awb_code": {
            "type": "string",
            "example": "12346"
          },
          "courier_company_id": {
            "type": "integer",
            "example": 12
          },
          "courier_name": {
            "type": "string",
            "example": "Fedex Surface"
          },
          "routing_code": {
            "type": "string",
            "description": "Routing code provided by the Courier",
            "example": ""
          }
        }
      },
      "GenerateInvoiceRequest": {
        "title": "Generate invoice request",
        "required": [
          "ids"
        ],
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "description": "Mentions the ids of the orders which are to be invoiced. If there are multiple orders then you can cancel them by just entering them in multiple lines",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "export401": {
        "title": "unauthorized access",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Failed to authenticate because of bad credentials or an invalid authorization header."
          },
          "status_code": {
            "type": "integer",
            "example": 401
          }
        }
      },
      "CreateLinkedOrderRequest": {
        "title": "Create linked order. request",
        "required": [
          "billing_address",
          "billing_address_2",
          "billing_city",
          "billing_country",
          "billing_customer_name",
          "billing_email",
          "billing_last_name",
          "billing_phone",
          "billing_pincode",
          "billing_state",
          "channel_id",
          "giftwrap_charges",
          "order_date",
          "order_id",
          "order_items",
          "payment_method",
          "shipping_address",
          "shipping_address_2",
          "shipping_charges",
          "shipping_city",
          "shipping_country",
          "shipping_customer_name",
          "shipping_email",
          "shipping_is_billing",
          "shipping_last_name",
          "shipping_phone",
          "shipping_pincode",
          "shipping_state",
          "sub_total",
          "total_discount",
          "transaction_charges"
        ],
        "type": "object",
        "properties": {
          "order_id": {
            "type": "string",
            "description": "Creates the order id"
          },
          "pickup_code": {
            "type": "string",
            "description": "Name of the pickup location"
          },
          "order_date": {
            "type": "string",
            "description": "Mentions the date and time when the order was created"
          },
          "channel_id": {
            "type": "integer",
            "description": "The id of the channel where the order is placed",
            "format": "int32"
          },
          "billing_customer_name": {
            "type": "string",
            "description": "The customer’s name"
          },
          "billing_last_name": {
            "type": "string",
            "description": "The customer’s last name"
          },
          "billing_address": {
            "type": "string",
            "description": "The first two address lines of the customer"
          },
          "billing_address_2": {
            "type": "string",
            "description": ""
          },
          "billing_city": {
            "type": "string",
            "description": "Geographical details of the customer’s address"
          },
          "billing_state": {
            "type": "string",
            "description": ""
          },
          "billing_country": {
            "type": "string",
            "description": ""
          },
          "billing_pincode": {
            "type": "string",
            "description": "Customer’s pincode"
          },
          "billing_email": {
            "type": "string",
            "description": "Customer’s email id"
          },
          "billing_phone": {
            "type": "string",
            "description": "Customer’s phone numberThe name of the person to whom the package is being shipped"
          },
          "shipping_is_billing": {
            "type": "integer",
            "description": "If Billing address and Shipping Address are same, then true otherwise false",
            "format": "int32"
          },
          "shipping_customer_name": {
            "type": "string",
            "description": "The name of the person to whom the package is being shipped"
          },
          "shipping_last_name": {
            "type": "string",
            "description": ""
          },
          "shipping_address": {
            "type": "string",
            "description": "Address of the person to whom the package is being shipped to"
          },
          "shipping_address_2": {
            "type": "string",
            "description": ""
          },
          "shipping_city": {
            "type": "string",
            "description": ""
          },
          "shipping_country": {
            "type": "string",
            "description": ""
          },
          "shipping_pincode": {
            "type": "string",
            "description": ""
          },
          "shipping_state": {
            "type": "string",
            "description": ""
          },
          "shipping_email": {
            "type": "string",
            "description": "Email id of the person whom the package is being shipped to"
          },
          "shipping_phone": {
            "type": "string",
            "description": "Phone number of the person whom the package is being shipped to"
          },
          "order_items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "selling_price": {
                  "type": "integer",
                  "description": "Price at which it is being sold"
                },
                "HSN": {
                  "type": "string",
                  "description": "Harmonised System Nomenclature. A code number used to classify goods for taxation purposes. Done to determine which category of taxes do the goods come under"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the product"
                },
                "discount": {
                  "type": "integer",
                  "description": ""
                },
                "units": {
                  "type": "integer",
                  "description": "Total number of units being shipped"
                },
                "sku": {
                  "type": "string",
                  "description": "Stock Keeping Unit or the identification unit of an individual product (generally alphanumeric)"
                }
              }
            }
          },
          "payment_method": {
            "type": "string",
            "description": "Specifies the payment method"
          },
          "shipping_charges": {
            "type": "string",
            "description": "Mentions the shipping charges"
          },
          "giftwrap_charges": {
            "type": "string",
            "description": "Mentions the charges for giftwrapping"
          },
          "transaction_charges": {
            "type": "string",
            "description": "Mentions the charges for the total transaction"
          },
          "total_discount": {
            "type": "string",
            "description": "Mentions the total discount offered"
          },
          "sub_total": {
            "type": "integer",
            "description": "Mentions the total after these deductions",
            "format": "int32"
          },
          "length": {
            "type": "integer",
            "description": "Mentions the product dimensions"
          },
          "breadth": {
            "type": "integer",
            "description": ""
          },
          "height": {
            "type": "integer",
            "description": ""
          },
          "weight": {
            "type": "integer",
            "description": ""
          }
        }
      },
      "StatementResponse": {
        "title": "Satement response",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "transaction_id": {
                  "type": "string",
                  "description": "",
                  "example": ""
                },
                "billed_weight": {
                  "type": "string",
                  "description": "",
                  "example": ""
                },
                "return_awb_code": {
                  "type": "string",
                  "description": "",
                  "example": null
                },
                "charge": {
                  "type": "string",
                  "description": "",
                  "example": ""
                },
                "credit_amount": {
                  "type": "string",
                  "description": "",
                  "example": ""
                },
                "description": {
                  "type": "string",
                  "description": "",
                  "example": "Wallet balance"
                },
                "created_at": {
                  "type": "string",
                  "description": "",
                  "example": ""
                },
                "debit_amount": {
                  "type": "string",
                  "description": "",
                  "example": ""
                },
                "channel_order_id": {
                  "type": "string",
                  "description": "",
                  "example": ""
                },
                "charged_weight": {
                  "type": "string",
                  "description": "",
                  "example": ""
                },
                "entered_weight": {
                  "type": "string",
                  "description": "",
                  "example": ""
                },
                "volumetric_weight": {
                  "type": "string",
                  "description": "",
                  "example": ""
                },
                "balance_amount": {
                  "type": "string",
                  "description": "",
                  "example": -41819.57
                },
                "balance_weight": {
                  "type": "integer",
                  "description": "",
                  "example": 0
                },
                "action": {
                  "type": "string",
                  "description": "",
                  "example": ""
                },
                "awb_code": {
                  "type": "string",
                  "description": "",
                  "example": ""
                },
                "order_id": {
                  "type": "string",
                  "description": "",
                  "example": ""
                },
                "applied_weight": {
                  "type": "string",
                  "description": "",
                  "example": ""
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "pagination": {
                "type": "object",
                "properties": {
                  "per_page": {
                    "type": "integer"
                  },
                  "total": {
                    "type": "integer"
                  },
                  "count": {
                    "type": "integer"
                  },
                  "links": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "total_pages": {
                    "type": "integer"
                  },
                  "current_page": {
                    "type": "integer"
                  }
                },
                "example": {
                  "total": 7,
                  "count": 7,
                  "per_page": 15,
                  "current_page": 1,
                  "total_pages": 1,
                  "links": []
                }
              }
            }
          }
        }
      },
      "DiscrepancyResponse": {
        "title": "Discrepancy response",
        "required": [
          "data",
          "lower_fild_text",
          "status",
          "upper_fold_text"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 200
          },
          "data": {
            "type": "array",
            "example": [],
            "items": {
              "type": "object"
            }
          },
          "upper_fold_text": {
            "type": "string",
            "example": ""
          },
          "lower_fild_text": {
            "type": "string",
            "example": ""
          }
        }
      },
      "InternationalServiceabilityResponse": {
        "title": "International Serviceability Response",
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "description": "HTTP response code",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "recommended_courier_company_id": {
                "type": "integer",
                "description": "Recommended Courier Id",
                "example": 10
              },
              "recommended_by": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Courier Priority Selection id",
                    "example": 4
                  },
                  "title": {
                    "type": "string",
                    "description": "Details stating the selected Courier Priority Option in the settings",
                    "example": "Custom selection"
                  }
                }
              },
              "available_courier_companies": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "courier_company_id": {
                      "type": "integer",
                      "description": "Courier company id",
                      "example": 10
                    },
                    "courier_name": {
                      "type": "string",
                      "description": "Courier Company name",
                      "example": "ARAMEX"
                    },
                    "rate": {
                      "type": "object",
                      "properties": {
                        "rate": {
                          "type": "string",
                          "description": "",
                          "example": "1220.34"
                        },
                        "weight": {
                          "type": "string",
                          "description": "",
                          "example": "1.2"
                        }
                      }
                    }
                  }
                }
              },
              "is_recommendation_enabled": {
                "type": "boolean",
                "description": "",
                "example": true
              }
            }
          }
        }
      },
      "GetProductsResponse": {
        "title": "Get products response",
        "required": [
          "data",
          "meta"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "example": [
              {
                "id": 319134,
                "sku": "inactive",
                "hsn": "",
                "name": "inactive",
                "description": "",
                "category_code": "default",
                "category_name": "Default Category",
                "category_tax_code": "default",
                "image": "",
                "weight": "0.5 kg",
                "size": "",
                "cost_price": "0.00",
                "mrp": "0.00",
                "tax_code": "default",
                "low_stock": 0,
                "ean": "",
                "upc": "",
                "isbn": "",
                "created_at": "23 Jun 2017 02:17 PM",
                "updated_at": "23 Jun 2017 02:17 PM",
                "quantity": 11,
                "color": "",
                "brand": "",
                "dimensions": "10 x 10 x 10 cm",
                "status": "INACTIVE",
                "type": "Single"
              },
              {
                "id": 318862,
                "sku": "sanity",
                "hsn": "",
                "name": "sanity",
                "description": "",
                "category_code": "new",
                "category_name": "new",
                "category_tax_code": "5",
                "image": "",
                "weight": "0.5 kg",
                "size": "",
                "cost_price": "0.00",
                "mrp": "0.00",
                "tax_code": "5",
                "low_stock": 0,
                "ean": "",
                "upc": "",
                "isbn": "",
                "created_at": "23 Jun 2017 01:13 PM",
                "updated_at": "23 Jun 2017 01:13 PM",
                "quantity": 8,
                "color": "",
                "brand": "",
                "dimensions": "10 x 10 x 10 cm",
                "status": "ACTIVE",
                "type": "Single"
              }
            ],
            "items": {
              "type": "object",
              "properties": {
                "hsn": {
                  "type": "string"
                },
                "category_name": {
                  "type": "string"
                },
                "color": {
                  "type": "string"
                },
                "low_stock": {
                  "type": "integer"
                },
                "isbn": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "ean": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "sku": {
                  "type": "string"
                },
                "brand": {
                  "type": "string"
                },
                "cost_price": {
                  "type": "string"
                },
                "image": {
                  "type": "string"
                },
                "quantity": {
                  "type": "integer"
                },
                "category_code": {
                  "type": "string"
                },
                "weight": {
                  "type": "string"
                },
                "upc": {
                  "type": "string"
                },
                "mrp": {
                  "type": "string"
                },
                "tax_code": {
                  "type": "string"
                },
                "size": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "dimensions": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "pagination": {
                "type": "object",
                "properties": {
                  "per_page": {
                    "type": "integer"
                  },
                  "total": {
                    "type": "integer"
                  },
                  "count": {
                    "type": "integer"
                  },
                  "links": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "total_pages": {
                    "type": "integer"
                  },
                  "current_page": {
                    "type": "integer"
                  }
                },
                "example": {
                  "total": 7,
                  "count": 7,
                  "per_page": 15,
                  "current_page": 1,
                  "total_pages": 1,
                  "links": []
                }
              }
            }
          }
        }
      },
      "fileImportResponse": {
        "title": "Import Response",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {}
            }
          }
        }
      },
      "GetZonesResponse": {
        "title": "Get zones response",
        "required": [
          "data",
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {},
            "example": [
              {
                "id": 1,
                "country_id": 1,
                "code": "BDS",
                "name": "Badakhshan",
                "status": 1
              },
              {
                "id": 2,
                "country_id": 1,
                "code": "BDG",
                "name": "Badghis",
                "status": 1
              },
              {
                "id": 3,
                "country_id": 1,
                "code": "BGL",
                "name": "Baghlan",
                "status": 1
              },
              {
                "id": 4,
                "country_id": 1,
                "code": "BAL",
                "name": "Balkh",
                "status": 1
              },
              {
                "id": 5,
                "country_id": 1,
                "code": "BAM",
                "name": "Bamian",
                "status": 1
              },
              {
                "id": 6,
                "country_id": 1,
                "code": "FRA",
                "name": "Farah",
                "status": 1
              },
              {
                "id": 7,
                "country_id": 1,
                "code": "FYB",
                "name": "Faryab",
                "status": 1
              },
              {
                "id": 8,
                "country_id": 1,
                "code": "GHA",
                "name": "Ghazni",
                "status": 1
              },
              {
                "id": 9,
                "country_id": 1,
                "code": "GHO",
                "name": "Ghowr",
                "status": 1
              },
              {
                "id": 10,
                "country_id": 1,
                "code": "HEL",
                "name": "Helmand",
                "status": 1
              },
              {
                "id": 11,
                "country_id": 1,
                "code": "HER",
                "name": "Herat",
                "status": 1
              },
              {
                "id": 12,
                "country_id": 1,
                "code": "JOW",
                "name": "Jowzjan",
                "status": 1
              },
              {
                "id": 13,
                "country_id": 1,
                "code": "KAB",
                "name": "Kabul",
                "status": 1
              },
              {
                "id": 14,
                "country_id": 1,
                "code": "KAN",
                "name": "Kandahar",
                "status": 1
              },
              {
                "id": 15,
                "country_id": 1,
                "code": "KAP",
                "name": "Kapisa",
                "status": 1
              },
              {
                "id": 16,
                "country_id": 1,
                "code": "KHO",
                "name": "Khost",
                "status": 1
              },
              {
                "id": 17,
                "country_id": 1,
                "code": "KNR",
                "name": "Konar",
                "status": 1
              },
              {
                "id": 18,
                "country_id": 1,
                "code": "KDZ",
                "name": "Kondoz",
                "status": 1
              },
              {
                "id": 19,
                "country_id": 1,
                "code": "LAG",
                "name": "Laghman",
                "status": 1
              },
              {
                "id": 20,
                "country_id": 1,
                "code": "LOW",
                "name": "Lowgar",
                "status": 1
              },
              {
                "id": 21,
                "country_id": 1,
                "code": "NAN",
                "name": "Nangrahar",
                "status": 1
              },
              {
                "id": 22,
                "country_id": 1,
                "code": "NIM",
                "name": "Nimruz",
                "status": 1
              },
              {
                "id": 23,
                "country_id": 1,
                "code": "NUR",
                "name": "Nurestan",
                "status": 1
              },
              {
                "id": 24,
                "country_id": 1,
                "code": "ORU",
                "name": "Oruzgan",
                "status": 1
              },
              {
                "id": 25,
                "country_id": 1,
                "code": "PIA",
                "name": "Paktia",
                "status": 1
              },
              {
                "id": 26,
                "country_id": 1,
                "code": "PKA",
                "name": "Paktika",
                "status": 1
              },
              {
                "id": 27,
                "country_id": 1,
                "code": "PAR",
                "name": "Parwan",
                "status": 1
              },
              {
                "id": 28,
                "country_id": 1,
                "code": "SAM",
                "name": "Samangan",
                "status": 1
              },
              {
                "id": 29,
                "country_id": 1,
                "code": "SAR",
                "name": "Sar-e Pol",
                "status": 1
              },
              {
                "id": 30,
                "country_id": 1,
                "code": "TAK",
                "name": "Takhar",
                "status": 1
              }
            ]
          }
        }
      },
      "login422Error": {
        "title": "422 error unprocessable input",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Error in input"
          },
          "errors": {
            "type": "object",
            "properties": {
              "password": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "The password field is required."
                }
              },
              "email": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "The email field is required."
                }
              }
            }
          },
          "status_code": {
            "type": "integer",
            "example": 422
          }
        }
      },
      "ChangePickUpResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "error/ success message",
            "example": "Pickup location Updated"
          }
        }
      },
      "CreateQuickOrderRequest": {
        "type": "object",
        "properties": {
          "order_id": {
            "type": "string",
            "description": "required|max:20",
            "example": "Test order 1"
          },
          "order_date": {
            "type": "string",
            "description": "required",
            "example": "2018-05-08 12:23"
          },
          "pickup_location": {
            "type": "string",
            "description": "",
            "example": "Location 1"
          },
          "channel_id": {
            "type": "integer",
            "description": "",
            "example": 12
          },
          "comment": {
            "type": "string",
            "description": "To specify From Name, enter the name starting with 'Reseller: ' follwed by from name",
            "example": "Reseller: M/S Lal Enterprises"
          },
          "billing_customer_name": {
            "type": "string",
            "description": "required",
            "example": "John"
          },
          "billing_last_name": {
            "type": "string",
            "description": "",
            "example": "Doe"
          },
          "billing_address": {
            "type": "string",
            "description": "required|min:3",
            "example": "#12, street 1"
          },
          "billing_address_2": {
            "type": "string",
            "description": "max:50",
            "example": "Near Post office, Nehru Place"
          },
          "billing_city": {
            "type": "string",
            "description": "required|max:30",
            "example": "New Delhi"
          },
          "billing_pincode": {
            "type": "integer",
            "description": "",
            "example": 110002
          },
          "billing_state": {
            "type": "string",
            "description": "required",
            "example": "Delhi"
          },
          "billing_country": {
            "type": "string",
            "description": "required",
            "example": "India"
          },
          "billing_email": {
            "type": "string",
            "description": "required",
            "example": "john@doe.com"
          },
          "billing_phone": {
            "type": "integer",
            "description": "mobile number",
            "example": 9876543210
          },
          "shipping_is_billing": {
            "type": "boolean",
            "description": "required",
            "example": true
          },
          "shipping_customer_name": {
            "type": "string",
            "description": "",
            "example": ""
          },
          "shipping_last_name": {
            "type": "string",
            "description": "",
            "example": ""
          },
          "shipping_address": {
            "type": "string",
            "description": "",
            "example": ""
          },
          "shipping_address_2": {
            "type": "string",
            "description": "",
            "example": ""
          },
          "shipping_city": {
            "type": "string",
            "description": "",
            "example": ""
          },
          "shipping_pincode": {
            "type": "integer",
            "description": ""
          },
          "shipping_country": {
            "type": "string",
            "description": "",
            "example": ""
          },
          "shipping_state": {
            "type": "string",
            "description": "",
            "example": ""
          },
          "shipping_email": {
            "type": "string",
            "description": "",
            "example": ""
          },
          "shipping_phone": {
            "type": "integer",
            "description": ""
          },
          "order_items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "selling_price": {
                  "type": "integer",
                  "description": "required",
                  "example": 200
                },
                "hsn": {
                  "type": "integer",
                  "description": "Harmonised System Nomenclature. A code number used to classify goods for taxation purposes. Done to determine which category of taxes do the goods come under",
                  "example": 123445
                },
                "name": {
                  "type": "string",
                  "description": "required",
                  "example": "Test Product 1"
                },
                "discount": {
                  "type": "integer",
                  "description": ""
                },
                "tax": {
                  "type": "integer",
                  "description": ""
                },
                "units": {
                  "type": "integer",
                  "description": "required",
                  "example": 20
                },
                "sku": {
                  "type": "string",
                  "description": "required",
                  "example": "abc123"
                }
              }
            }
          },
          "payment_method": {
            "type": "string",
            "description": "required",
            "example": "Prepaid/COD"
          },
          "shipping_charges": {
            "type": "integer",
            "description": "",
            "example": 0
          },
          "giftwrap_charges": {
            "type": "integer",
            "description": "",
            "example": 0
          },
          "transaction_charges": {
            "type": "integer",
            "description": "",
            "example": 0
          },
          "total_discount": {
            "type": "integer",
            "description": "",
            "example": 0
          },
          "sub_total": {
            "type": "integer",
            "description": "",
            "example": 4000
          },
          "length": {
            "type": "integer",
            "description": "",
            "example": 18
          },
          "breadth": {
            "type": "integer",
            "description": "",
            "example": 18
          },
          "height": {
            "type": "integer",
            "description": "",
            "example": 40
          },
          "weight": {
            "type": "integer",
            "description": ""
          }
        }
      },
      "ShipmentTrackingResponse": {
        "title": "Shipment Tracking response",
        "required": [
          "tracking_data"
        ],
        "type": "object",
        "properties": {
          "tracking_data": {
            "type": "object",
            "properties": {}
          }
        }
      },
      "CheckServiceabilityResponse": {
        "title": "Check serviceability response",
        "required": [
          "data",
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32",
            "example": 200
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "delivery": {
                  "type": "object",
                  "properties": {
                    "city": {
                      "type": "string",
                      "example": "New Delhi"
                    },
                    "postcode": {
                      "type": "integer",
                      "example": 110030
                    },
                    "state": {
                      "type": "string",
                      "example": "DELHI"
                    }
                  }
                },
                "rates": {
                  "type": "object",
                  "properties": {
                    "Basic": {
                      "type": "object",
                      "properties": {
                        "surface": {
                          "type": "object",
                          "properties": {
                            "zone_a": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 28
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 48
                                }
                              }
                            },
                            "zone_b": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 40
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 48
                                }
                              }
                            },
                            "cod_charges": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 35
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 57
                                }
                              }
                            },
                            "zone_e": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 48
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 90
                                }
                              }
                            },
                            "zone_c": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 47
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 64
                                }
                              }
                            },
                            "zone_d": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 48
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 74
                                }
                              }
                            }
                          }
                        },
                        "air": {
                          "type": "object",
                          "properties": {
                            "zone_a": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 28
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 48
                                }
                              }
                            },
                            "zone_b": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 40
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 48
                                }
                              }
                            },
                            "cod_charges": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 35
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 57
                                }
                              }
                            },
                            "zone_e": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 48
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 90
                                }
                              }
                            },
                            "zone_c": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 47
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 64
                                }
                              }
                            },
                            "zone_d": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 48
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 74
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "Advanced": {
                      "type": "object",
                      "properties": {
                        "surface": {
                          "type": "object",
                          "properties": {
                            "zone_a": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 28
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 48
                                }
                              }
                            },
                            "zone_b": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 40
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 48
                                }
                              }
                            },
                            "cod_charges": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 35
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 57
                                }
                              }
                            },
                            "zone_e": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 48
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 90
                                }
                              }
                            },
                            "zone_c": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 47
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 64
                                }
                              }
                            },
                            "zone_d": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 48
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 74
                                }
                              }
                            }
                          }
                        },
                        "air": {
                          "type": "object",
                          "properties": {
                            "zone_a": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 28
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 48
                                }
                              }
                            },
                            "zone_b": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 40
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 48
                                }
                              }
                            },
                            "cod_charges": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 35
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 57
                                }
                              }
                            },
                            "zone_e": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 48
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 90
                                }
                              }
                            },
                            "zone_c": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 47
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 64
                                }
                              }
                            },
                            "zone_d": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 48
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 74
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "Lite": {
                      "type": "object",
                      "properties": {
                        "surface": {
                          "type": "object",
                          "properties": {
                            "zone_a": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 28
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 48
                                }
                              }
                            },
                            "zone_b": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 40
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 48
                                }
                              }
                            },
                            "cod_charges": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 35
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 57
                                }
                              }
                            },
                            "zone_e": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 48
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 90
                                }
                              }
                            },
                            "zone_c": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 47
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 64
                                }
                              }
                            },
                            "zone_d": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 48
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 74
                                }
                              }
                            }
                          }
                        },
                        "air": {
                          "type": "object",
                          "properties": {
                            "zone_a": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 28
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 48
                                }
                              }
                            },
                            "zone_b": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 40
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 48
                                }
                              }
                            },
                            "cod_charges": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 35
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 57
                                }
                              }
                            },
                            "zone_e": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 48
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 90
                                }
                              }
                            },
                            "zone_c": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 47
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 64
                                }
                              }
                            },
                            "zone_d": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 48
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 74
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "Pro": {
                      "type": "object",
                      "properties": {
                        "surface": {
                          "type": "object",
                          "properties": {
                            "zone_a": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 28
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 48
                                }
                              }
                            },
                            "zone_b": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 40
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 48
                                }
                              }
                            },
                            "cod_charges": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 35
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 57
                                }
                              }
                            },
                            "zone_e": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 48
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 90
                                }
                              }
                            },
                            "zone_c": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 47
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 64
                                }
                              }
                            },
                            "zone_d": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 48
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 74
                                }
                              }
                            }
                          }
                        },
                        "air": {
                          "type": "object",
                          "properties": {
                            "zone_a": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 28
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 48
                                }
                              }
                            },
                            "zone_b": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 40
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 48
                                }
                              }
                            },
                            "cod_charges": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 35
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 57
                                }
                              }
                            },
                            "zone_e": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 48
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 90
                                }
                              }
                            },
                            "zone_c": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 47
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 64
                                }
                              }
                            },
                            "zone_d": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "example": 48
                                },
                                "max": {
                                  "type": "integer",
                                  "example": 74
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "pickup": {
                  "type": "object",
                  "properties": {
                    "city": {
                      "type": "string",
                      "example": "New Delhi"
                    },
                    "postcode": {
                      "type": "integer",
                      "example": 110062
                    },
                    "state": {
                      "type": "string",
                      "example": "DELHI"
                    }
                  }
                },
                "available_courier_companies": {
                  "type": "object",
                  "properties": {
                    "surface": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "courier_name": {
                            "type": "string",
                            "example": "DOTZOT"
                          },
                          "estimated_delivery_days": {
                            "type": "integer"
                          },
                          "rate": {
                            "type": "integer",
                            "example": 109
                          },
                          "cod": {
                            "type": "integer",
                            "example": 1
                          }
                        }
                      }
                    },
                    "zone": {
                      "type": "string",
                      "example": "z_a"
                    },
                    "air": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "courier_name": {
                            "type": "string",
                            "example": "DOTZOT"
                          },
                          "estimated_delivery_days": {
                            "type": "integer"
                          },
                          "rate": {
                            "type": "integer",
                            "example": 109
                          },
                          "cod": {
                            "type": "integer",
                            "example": 1
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "listing400": {
        "title": "no file provided",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "FIle required"
          },
          "status_code": {
            "type": "integer",
            "example": 400
          }
        }
      },
      "printManifestRequest": {
        "title": "Print Individual Manifests Request",
        "type": "object",
        "properties": {
          "order_ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "description": "Order Id's of the orders to print manifests",
              "example": 1234
            }
          }
        }
      },
      "ShowResponse": {
        "title": "Show response",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "hsn": {
                "type": "string"
              },
              "category_name": {
                "type": "string"
              },
              "color": {
                "type": "string"
              },
              "low_stock": {
                "type": "integer"
              },
              "isbn": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "created_at": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "ean": {
                "type": "string"
              },
              "updated_at": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "sku": {
                "type": "string"
              },
              "brand": {
                "type": "string"
              },
              "cost_price": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "quantity": {
                "type": "integer"
              },
              "category_code": {
                "type": "string"
              },
              "weight": {
                "type": "string"
              },
              "upc": {
                "type": "string"
              },
              "mrp": {
                "type": "string"
              },
              "tax_code": {
                "type": "string"
              },
              "size": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "dimensions": {
                "type": "string"
              },
              "status": {
                "type": "string"
              }
            }
          }
        }
      },
      "generateManifestResponse": {
        "title": "Generate Manifests Response",
        "required": [
          "manifest_url",
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32",
            "example": 200
          },
          "manifest_url": {
            "type": "string",
            "example": "https://s3-ap-southeast-1.amazonaws.com/kr-multichannel/1/manifest/MAN-00212.pdf"
          }
        }
      },
      "MappingRequest": {
        "title": "Mapping request",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "order_product_id": {
                  "type": "integer",
                  "example": 321
                },
                "master_sku": {
                  "type": "string",
                  "example": "H3HEDE"
                },
                "order_id": {
                  "type": "integer",
                  "example": 123
                }
              }
            }
          }
        }
      },
      "CreateForwardOrderRequest": {
        "type": "object",
        "properties": {
          "mode": {
            "type": "string",
            "description": "Specify mode of shipment - air or surface",
            "example": "air"
          },
          "request_pickup": {
            "type": "boolean",
            "description": "Request pickup",
            "example": true
          },
          "courier_id": {
            "type": "integer",
            "description": "Courier Company Id, refer to the Serviceability API in Courier section.",
            "example": 16
          },
          "reseller_name": {
            "type": "string",
            "description": "Specify From Name",
            "example": "M/S Lal Enterprises"
          },
          "order_id": {
            "type": "integer",
            "description": "Order Number"
          },
          "isd_code": {
            "type": "string",
            "description": "",
            "example": 91
          },
          "billing_isd_code": {
            "type": "string",
            "description": "",
            "example": 91
          },
          "order_date": {
            "type": "string",
            "description": "Date of Order Creation",
            "example": "2018-09-28T08:33:47.933Z"
          },
          "channel_id": {
            "type": "integer",
            "description": "Channel Id to manage inventory, that can be fetched by Channels API",
            "example": 12
          },
          "billing_customer_name": {
            "type": "string",
            "description": "Bill to First Name",
            "example": "John"
          },
          "billing_last_name": {
            "type": "string",
            "description": "Bill to Last Name",
            "example": "doe"
          },
          "billing_address": {
            "type": "string",
            "description": "Bill to Address line 1",
            "example": "#123, street 11"
          },
          "billing_address_2": {
            "type": "string",
            "description": "Bill to Address line 2",
            "example": ""
          },
          "billing_city": {
            "type": "string",
            "description": "Bill to City",
            "example": "Delhi"
          },
          "billing_state": {
            "type": "string",
            "description": "Bill to State",
            "example": "Delhi"
          },
          "billing_country": {
            "type": "string",
            "description": "Bill to Country",
            "example": "India"
          },
          "billing_pincode": {
            "type": "integer",
            "description": "Bill to Pincode",
            "example": 110030
          },
          "billing_email": {
            "type": "string",
            "description": "Billing Email",
            "example": "abc@xyz.com"
          },
          "billing_phone": {
            "type": "integer",
            "description": "Billing Phone Number, should be 10 digit phone number",
            "example": 9876543210
          },
          "shipping_is_billing": {
            "type": "boolean",
            "description": " If Billing address and Shipping Address are same, then true otherwise false",
            "example": true
          },
          "shipping_customer_name": {
            "type": "string",
            "description": "Ship to First Name",
            "example": ""
          },
          "shipping_last_name": {
            "type": "string",
            "description": "Ship to Last Name",
            "example": ""
          },
          "shipping_address": {
            "type": "string",
            "description": "Ship to Address line 1",
            "example": ""
          },
          "shipping_address_2": {
            "type": "string",
            "description": "Ship to Address line 2",
            "example": ""
          },
          "shipping_city": {
            "type": "string",
            "description": "Ship to City",
            "example": ""
          },
          "shipping_state": {
            "type": "string",
            "description": "Ship to State",
            "example": ""
          },
          "shipping_country": {
            "type": "string",
            "description": "Ship to Country",
            "example": ""
          },
          "shipping_pincode": {
            "type": "integer",
            "description": "Ship to pincode"
          },
          "shipping_email": {
            "type": "string",
            "description": "Shipping Email",
            "example": ""
          },
          "shipping_phone": {
            "type": "integer",
            "description": "Shipping Phone"
          },
          "order_items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "selling_price": {
                  "type": "string",
                  "description": "Selling Price inclusive of tax",
                  "example": "234"
                },
                "hsn": {
                  "type": "integer",
                  "description": "HSN number",
                  "example": 12345
                },
                "name": {
                  "type": "string",
                  "description": "Product Name",
                  "example": "Test Product"
                },
                "discount": {
                  "type": "integer",
                  "description": "Discount Amount inclusive of tax",
                  "example": 20
                },
                "tax": {
                  "type": "integer",
                  "description": "Tax Percent",
                  "example": 10
                },
                "units": {
                  "type": "integer",
                  "description": "Quantity",
                  "example": 2
                },
                "sku": {
                  "type": "string",
                  "description": "Product sku",
                  "example": "test_product_1"
                }
              }
            }
          },
          "payment_method": {
            "type": "string",
            "description": "COD or Prepaid",
            "example": "COD"
          },
          "shipping_charges": {
            "type": "integer",
            "description": "Shipping Charges",
            "example": 50
          },
          "giftwrap_charges": {
            "type": "integer",
            "description": "",
            "example": 20
          },
          "transaction_charges": {
            "type": "integer",
            "description": "",
            "example": 10
          },
          "total_discount": {
            "type": "integer",
            "description": "Total discount on Order",
            "example": 20
          },
          "sub_total": {
            "type": "integer",
            "description": "sub total",
            "example": 5432
          },
          "weight": {
            "type": "string",
            "description": "Weight in Kgs",
            "example": "0.32"
          },
          "length": {
            "type": "integer",
            "description": "Length in cm",
            "example": 10
          },
          "breadth": {
            "type": "integer",
            "description": "Breadth in cm",
            "example": 10
          },
          "height": {
            "type": "integer",
            "description": "Height in cm",
            "example": 10
          },
          "pickup_location": {
            "type": "string",
            "description": "Specify a Name for the Pickup Location",
            "example": "My Location"
          },
          "vendor_details": {
            "type": "object",
            "properties": {
              "country": {
                "type": "string",
                "description": "",
                "example": ""
              },
              "address": {
                "type": "string",
                "description": "",
                "example": ""
              },
              "phone": {
                "type": "integer",
                "description": ""
              },
              "city": {
                "type": "string",
                "description": "",
                "example": ""
              },
              "pickup_location": {
                "type": "string",
                "description": "Location name for reference",
                "example": "My Location New"
              },
              "address_2": {
                "type": "string",
                "description": "",
                "example": ""
              },
              "pin_code": {
                "type": "integer",
                "description": ""
              },
              "name": {
                "type": "string",
                "description": "",
                "example": ""
              },
              "state": {
                "type": "string",
                "description": "",
                "example": ""
              },
              "email": {
                "type": "string",
                "description": "",
                "example": ""
              }
            },
            "description": "Use if you want to give another Pick up address, which is not registered with ShipRocket"
          }
        }
      },
      "BulkTrackingResponse": {
        "type": "object",
        "properties": {
          "{awb_code}": {
            "type": "object",
            "properties": {
              "tracking_data": {
                "type": "object",
                "properties": {
                  "shipment_track": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "courier_company_id": {
                          "type": "integer",
                          "example": 10
                        },
                        "consignee_address": {
                          "type": "string",
                          "example": "123, ABD Street, Salem, Tamil Nadu"
                        },
                        "delivered_to": {
                          "type": "string",
                          "example": "NA"
                        },
                        "origin": {
                          "type": "string",
                          "example": "Chennai_Egmore_C (Tamil Nadu)"
                        },
                        "consignee_name": {
                          "type": "string",
                          "example": "John"
                        },
                        "destination": {
                          "type": "string",
                          "example": "Salem"
                        },
                        "description": {
                          "type": "string",
                          "example": "NA"
                        },
                        "weight": {
                          "type": "string",
                          "example": "NA"
                        },
                        "created_at": {
                          "type": "string",
                          "example": "2016-11-04T10:00:30.000Z"
                        },
                        "contact_info": {
                          "type": "string",
                          "example": "9876543210"
                        },
                        "shipment_id": {
                          "type": "integer",
                          "example": 1234
                        },
                        "packages": {
                          "type": "integer",
                          "example": 0
                        },
                        "pickup_date": {
                          "type": "string",
                          "example": "2016-11-02T19:47:50.655Z"
                        },
                        "updated_at": {
                          "type": "string",
                          "example": "2016-11-05T20:00:24.000Z"
                        },
                        "service": {
                          "type": "string",
                          "example": "COD"
                        },
                        "current_status": {
                          "type": "string",
                          "example": "Delivered"
                        },
                        "id": {
                          "type": "integer",
                          "example": 44
                        },
                        "awb_code": {
                          "type": "string",
                          "example": "12345678"
                        },
                        "order_id": {
                          "type": "integer",
                          "example": 123
                        },
                        "delivered_date": {
                          "type": "string",
                          "example": "2016-11-05T14:29:38.002Z"
                        },
                        "shipment_type": {
                          "type": "string",
                          "example": "COD"
                        }
                      }
                    }
                  },
                  "shipment_track_activities": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "date": {
                          "type": "string"
                        },
                        "activity": {
                          "type": "string"
                        },
                        "ship_track_id": {
                          "type": "integer"
                        },
                        "location": {
                          "type": "string"
                        },
                        "id": {
                          "type": "integer"
                        }
                      },
                      "example": {
                        "id": 972,
                        "ship_track_id": 44,
                        "date": "2016-11-05T14:29:38.000Z",
                        "location": "Salem (Tamil Nadu)",
                        "activity": "Delivered - Delivered to consignee"
                      }
                    }
                  },
                  "track_status": {
                    "type": "integer",
                    "example": 1
                  },
                  "track_url": {
                    "type": "string",
                    "example": "https://app.shiprocket.in/tracking/awb/12345"
                  },
                  "shipment_status": {
                    "type": "integer",
                    "example": 7
                  }
                },
                "description": "Tracking data of corresponding awb_code"
              }
            },
            "description": "The awb_code passed in the request data"
          }
        }
      },
      "GenerateLabelResponse": {
        "title": "Generate Label response",
        "type": "object",
        "properties": {
          "label_created": {
            "type": "integer",
            "format": "int32"
          },
          "label_url": {
            "type": "string",
            "example": "https://s3-ap-southeast-1.amazonaws.com/kr-multichannel/1/label/00212.pdf"
          },
          "response": {
            "type": "string"
          }
        }
      },
      "ShipmentsResponse": {
        "title": "Get Shipments Response",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "channel_name": {
                  "type": "string",
                  "example": "CUSTOM"
                },
                "number": {
                  "type": "string",
                  "example": "1234"
                },
                "code": {
                  "type": "string",
                  "example": "abc"
                },
                "base_channel_code": {
                  "type": "string",
                  "example": "CS"
                },
                "created_at": {
                  "type": "string",
                  "example": "2018-04-03T12:43:23.000Z"
                },
                "id": {
                  "type": "string",
                  "example": "123456"
                },
                "order_id": {
                  "type": "string",
                  "example": "123"
                },
                "awb": {
                  "type": "string",
                  "example": "123456789"
                },
                "channel_id": {
                  "type": "string",
                  "example": "34"
                },
                "payment_method": {
                  "type": "string",
                  "example": "prepaid"
                },
                "products": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "quantity": {
                        "type": "string",
                        "example": "2"
                      },
                      "name": {
                        "type": "string",
                        "example": "Mobile case"
                      },
                      "sku": {
                        "type": "string",
                        "example": "mcase01"
                      }
                    }
                  }
                },
                "status": {
                  "type": "string",
                  "example": "In Transit"
                }
              }
            }
          }
        }
      },
      "GetPickupResponse": {
        "title": "All pickup locations",
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "allow_more": {
                "type": "string",
                "example": "true"
              },
              "shipping_address": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "country": {
                      "type": "string",
                      "example": "India"
                    },
                    "address": {
                      "type": "string",
                      "example": "123, abc street"
                    },
                    "company_id": {
                      "type": "integer",
                      "example": 321
                    },
                    "pickup_location": {
                      "type": "string",
                      "example": "NEWDELHI"
                    },
                    "city": {
                      "type": "string",
                      "example": "delhi"
                    },
                    "address_2": {
                      "type": "string",
                      "example": "near post office"
                    },
                    "pin_code": {
                      "type": "integer",
                      "example": 110030
                    },
                    "phone": {
                      "type": "integer",
                      "example": 9876543210
                    },
                    "name": {
                      "type": "string",
                      "example": "ABC Pvt Ltd"
                    },
                    "id": {
                      "type": "integer",
                      "example": 123
                    },
                    "state": {
                      "type": "string",
                      "example": "delhi"
                    },
                    "email": {
                      "type": "string",
                      "example": "abc@xyz.com"
                    },
                    "status": {
                      "type": "integer",
                      "example": 2
                    }
                  }
                }
              }
            }
          }
        }
      },
      "bulkExportResponse": {
        "title": "export all products",
        "type": "object",
        "properties": {
          "download_url": {
            "type": "string",
            "example": "https://s3-ap-southeast-1.amazonaws.com/kr-shipmultichannel/imports/c_21642/export-2017-08-28.csv"
          }
        }
      },
      "ChangeAddressRequest": {
        "title": "Shows the address which needs to be updated",
        "required": [
          "order_id",
          "shipping_address",
          "shipping_address_2",
          "shipping_city",
          "shipping_country",
          "shipping_customer_name",
          "shipping_phone",
          "shipping_pincode",
          "shipping_state"
        ],
        "type": "object",
        "properties": {
          "order_id": {
            "type": "integer",
            "description": "Order of the customer whose address details need to be changed",
            "format": "int32"
          },
          "shipping_customer_name": {
            "type": "string",
            "description": "The name of the customer whose details need to be changed"
          },
          "shipping_phone": {
            "type": "string",
            "description": "The customer’s phone number"
          },
          "shipping_address": {
            "type": "string",
            "description": "1st line of the address"
          },
          "shipping_address_2": {
            "type": "string",
            "description": "2nd line of the address"
          },
          "shipping_city": {
            "type": "string",
            "description": "The city where it is to be shipped"
          },
          "shipping_state": {
            "type": "string",
            "description": "The state where it is to be shipped"
          },
          "shipping_country": {
            "type": "string",
            "description": "The country where it is to be shipped"
          },
          "shipping_pincode": {
            "type": "integer",
            "description": "The pincode of the customer",
            "format": "int32"
          }
        }
      },
      "BulkTrackingRequest": {
        "required": [
          "awbs"
        ],
        "type": "object",
        "properties": {
          "awbs": {
            "type": "array",
            "example": [
              "123",
              "345"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "401Error": {
        "title": "Invalid token",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Token Signature could not be verified."
          },
          "status_code": {
            "type": "integer",
            "example": 401
          }
        }
      },
      "CancelOrdersResponse": {
        "title": "Order Cancel request",
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Your request to cancel order id order has been taken. Since the AWB has already been assigned,  the freight amount against that order is blocked and it will be added back automatically in to your balance in 3-4 working days after the verification by the concerned team."
          }
        }
      },
      "productImportResponse": {
        "title": "import success",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 12
          }
        }
      },
      "GetTokenResponse": {
        "title": "Get token response",
        "required": [
          "company_id",
          "created_at",
          "email",
          "first_name",
          "id",
          "last_name",
          "token"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "user’s unique user id",
            "format": "int32",
            "example": 1
          },
          "first_name": {
            "type": "string",
            "description": "first name of the user",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "description": "last name of the user",
            "example": "Doe"
          },
          "email": {
            "type": "string",
            "description": "email of the user",
            "example": "abcd@xyz.com"
          },
          "company_id": {
            "type": "integer",
            "description": "company id of the user",
            "format": "int32",
            "example": 12
          },
          "created_at": {
            "type": "string",
            "description": "date of creation",
            "format": "dateTime"
          },
          "token": {
            "type": "string",
            "description": "necessary token number",
            "example": "huiyd878y823hh2hdu232h"
          }
        }
      },
      "GetAllResponse": {
        "title": "Get all response",
        "required": [
          "data",
          "meta"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "example": [
              {
                "id": 416474,
                "title": "product2",
                "image": "",
                "price": "500.00",
                "quantity": -4,
                "sku": "shopify",
                "channel_sku": "product2",
                "channel_id": 23423,
                "channel_name": "SHOPIFY",
                "base_channel_code": "SH",
                "channel_product_id": "10808202516",
                "inventory": 18,
                "synced_on": "8 Jun 2017 01:15 PM"
              },
              {
                "id": 416475,
                "title": "product",
                "image": "",
                "price": "400.00",
                "quantity": -1,
                "sku": "Iphone5s",
                "channel_sku": "product",
                "channel_id": 23423,
                "channel_name": "SHOPIFY",
                "base_channel_code": "SH",
                "channel_product_id": "10807289684",
                "inventory": 0,
                "synced_on": "5 Jun 2017 03:27 PM"
              }
            ],
            "items": {
              "type": "object",
              "properties": {
                "channel_name": {
                  "type": "string"
                },
                "image": {
                  "type": "string"
                },
                "quantity": {
                  "type": "integer"
                },
                "channel_product_id": {
                  "type": "string"
                },
                "synced_on": {
                  "type": "string"
                },
                "base_channel_code": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "inventory": {
                  "type": "integer"
                },
                "price": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "sku": {
                  "type": "string"
                },
                "channel_sku": {
                  "type": "string"
                },
                "channel_id": {
                  "type": "integer"
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "pagination": {
                "type": "object",
                "properties": {
                  "per_page": {
                    "type": "integer"
                  },
                  "total": {
                    "type": "integer"
                  },
                  "count": {
                    "type": "integer"
                  },
                  "links": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "total_pages": {
                    "type": "integer"
                  },
                  "current_page": {
                    "type": "integer"
                  }
                },
                "example": {
                  "total": 7,
                  "count": 7,
                  "per_page": 15,
                  "current_page": 1,
                  "total_pages": 1,
                  "links": []
                }
              }
            }
          }
        }
      },
      "import403": {
        "title": "incorrect format",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "403 bad request"
          },
          "status_code": {
            "type": "integer",
            "example": 403
          }
        }
      },
      "400Error": {
        "title": "400 error Bad Request",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "These credentials do not match our records."
          },
          "status_code": {
            "type": "integer",
            "example": 400
          }
        }
      },
      "GenerateInvoiceResponse": {
        "title": "Generate invoice response",
        "required": [
          "invoice_url",
          "is_invoice_created",
          "not_created"
        ],
        "type": "object",
        "properties": {
          "is_invoice_created": {
            "type": "boolean",
            "description": "Mentions the response to if the invoice is created by the system or not"
          },
          "invoice_url": {
            "type": "string",
            "description": "If the answer to the aforementioned question is true, then it displays the url of a pdf file with the order invoice"
          },
          "not_created": {
            "type": "array",
            "description": "If the invoice is not created then it shows this fact",
            "items": {
              "type": "string",
              "example": ""
            }
          }
        }
      },
      "CheckServiceabilityError": {
        "title": "PINCODE is not serviceable",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Postcode is not secviceable by SHIPROCKET"
          },
          "status_code": {
            "type": "string",
            "description": "HTTP status of request"
          }
        }
      },
      "CreateForwardOrderResponse": {
        "title": "Success Response",
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "description": "",
            "example": 1
          },
          "payload": {
            "type": "object",
            "properties": {
              "courier_company_id": {
                "type": "integer",
                "description": "",
                "example": 13
              },
              "order_created": {
                "type": "boolean",
                "description": "",
                "example": true
              },
              "label_generated": {
                "type": "boolean",
                "description": "",
                "example": true
              },
              "shipment_id": {
                "type": "integer",
                "description": "",
                "example": 65434
              },
              "label_url": {
                "type": "string",
                "description": "https://s3-ap-southeast-1.amazonaws.com/kr-multichannel/1/label/00212.pdf",
                "example": ""
              },
              "courier_name": {
                "type": "string",
                "description": "",
                "example": "Delivery"
              },
              "pickup_scheduled_date": {
                "type": "string",
                "description": "Date of pickup",
                "example": "2018-09-29T10:10:51.000Z"
              },
              "assigned_date_time": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "description": "",
                    "example": "2018-09-29T10:10:51.000Z"
                  },
                  "timezone": {
                    "type": "string",
                    "description": "",
                    "example": "Asia/Kolkata"
                  },
                  "timezone_type": {
                    "type": "integer",
                    "description": "",
                    "example": 3
                  }
                }
              },
              "cod": {
                "type": "integer",
                "description": "1 for COD order, 0 for Prepaid",
                "example": 1
              },
              "manifest_url": {
                "type": "string",
                "description": "https://s3-ap-southeast-1.amazonaws.com/kr-multichannel/1/manifest/MAN-00212.pdf",
                "example": ""
              },
              "awb_code": {
                "type": "string",
                "description": "",
                "example": "A2345"
              },
              "awb_generated": {
                "type": "boolean",
                "description": "",
                "example": true
              },
              "order_id": {
                "type": "integer",
                "description": "",
                "example": 1234456
              },
              "pickup_generated": {
                "type": "boolean",
                "description": "",
                "example": true
              },
              "manifest_generated": {
                "type": "boolean",
                "description": "",
                "example": true
              },
              "applied_weight": {
                "type": "string",
                "description": "",
                "example": "0.7"
              }
            }
          }
        }
      },
      "CreateLinkedOrderResponse": {
        "title": "Create linked order. response",
        "type": "object",
        "properties": {
          "order_id": {
            "type": "string",
            "example": "12345"
          },
          "status_code": {
            "type": "string",
            "example": "1"
          },
          "shipment_id": {
            "type": "string",
            "example": "1234"
          },
          "status": {
            "type": "string",
            "example": "NEW"
          }
        }
      },
      "GetInventoriesResponse": {
        "title": "Get inventories response",
        "required": [
          "data",
          "meta"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "available_quantity": {
                  "type": "integer",
                  "description": "Shows the quantity which can be shipped"
                },
                "updated_on": {
                  "type": "string",
                  "description": "Displays the time of inventory updation"
                },
                "is_combo": {
                  "type": "integer",
                  "description": ""
                },
                "category_name": {
                  "type": "string",
                  "description": "If the product comes under a certain specified category or not. If not, then it will be named as default"
                },
                "color": {
                  "type": "string",
                  "description": "Mentions the product color"
                },
                "name": {
                  "type": "string",
                  "description": "Product name"
                },
                "blocked_quantity": {
                  "type": "integer",
                  "description": "Shows the number of product pieces which cannot be shipped"
                },
                "total_quantity": {
                  "type": "integer",
                  "description": "Shows the total number of pieces of the product as listed"
                },
                "id": {
                  "type": "integer",
                  "description": "The product id"
                },
                "sku": {
                  "type": "string",
                  "description": "Stock Keeping Unit or the identification unit of an individual product (generally alphanumeric)"
                },
                "type": {
                  "type": "string",
                  "description": "Mention of the type of product"
                },
                "brand": {
                  "type": "string",
                  "description": "Mentions the brand of the product."
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "pagination": {
                "type": "object",
                "properties": {
                  "per_page": {
                    "type": "integer",
                    "description": "Shows the number of products which are listd per page"
                  },
                  "total": {
                    "type": "integer",
                    "description": "Shows the total number of products whose inventories were checked in the paginated page"
                  },
                  "count": {
                    "type": "integer",
                    "description": "Show the results for that paginated page"
                  },
                  "links": {
                    "type": "array",
                    "description": "Lists the links to the inventories",
                    "items": {
                      "type": "string"
                    }
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "Shows the total number of pages"
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "Shows the current page of the total number of pages"
                  }
                }
              }
            }
          }
        }
      },
      "GetOrderResponse": {
        "title": "Get order response",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "channel_name": {
                "type": "string",
                "example": "My Channel"
              },
              "status_code": {
                "type": "integer",
                "example": 1
              },
              "payment_status": {
                "type": "string",
                "example": "Pending"
              },
              "base_channel_code": {
                "type": "string",
                "example": "MC"
              },
              "customer_phone": {
                "type": "string",
                "example": "9876543210"
              },
              "sla": {
                "type": "string",
                "example": "2 days"
              },
              "created_at": {
                "type": "string",
                "example": "4 Sep 2017, 12:26 PM"
              },
              "tax": {
                "type": "string",
                "example": "0.00"
              },
              "channel_order_id": {
                "type": "string",
                "example": "Test1504508157347"
              },
              "channel_created_at": {
                "type": "string",
                "example": "4 Sep 2017, 12:26 PM"
              },
              "shipments": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "volumetric_weight": {
                      "type": "string",
                      "example": "0.5"
                    },
                    "isd_code": {
                      "type": "string",
                      "example": 91
                    },
                    "courier": {
                      "type": "string",
                      "example": "FedEx"
                    },
                    "return_awb": {
                      "type": "string",
                      "example": "321"
                    },
                    "weight": {
                      "type": "string",
                      "example": "0.5"
                    },
                    "id": {
                      "type": "integer",
                      "example": 123
                    },
                    "awb": {
                      "type": "string",
                      "example": "123"
                    },
                    "dimensions": {
                      "type": "string",
                      "example": "10x10x10"
                    }
                  }
                }
              },
              "products": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "hsn": {
                      "type": "string",
                      "example": "54673478"
                    },
                    "quantity": {
                      "type": "integer",
                      "example": 1
                    },
                    "channel_order_product_id": {
                      "type": "integer",
                      "example": 456
                    },
                    "product_id": {
                      "type": "integer",
                      "example": 123
                    },
                    "name": {
                      "type": "string",
                      "example": "test product"
                    },
                    "available": {
                      "type": "string",
                      "example": "0"
                    },
                    "id": {
                      "type": "integer",
                      "example": 123
                    },
                    "channel_sku": {
                      "type": "string",
                      "example": "ABCD1234"
                    },
                    "status": {
                      "type": "string",
                      "example": "UNDEFINED"
                    }
                  }
                }
              },
              "total": {
                "type": "string",
                "example": "100.00"
              },
              "expedited": {
                "type": "string",
                "example": "0"
              },
              "shipping_method": {
                "type": "string",
                "example": "SR"
              },
              "activities": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "ORDER_CREATED"
                }
              },
              "customer_email": {
                "type": "string",
                "example": "test@gmail.com"
              },
              "id": {
                "type": "integer",
                "example": 123
              },
              "customer_name": {
                "type": "string",
                "example": "first last"
              },
              "purpose_of_shipment": {
                "type": "integer",
                "example": 0
              },
              "channel_id": {
                "type": "integer",
                "example": 456
              },
              "is_international": {
                "type": "integer",
                "example": 0
              },
              "payment_method": {
                "type": "string",
                "example": "Prepaid"
              },
              "status": {
                "type": "string",
                "example": "NEW"
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "pagination": {
                "type": "object",
                "properties": {
                  "per_page": {
                    "type": "integer",
                    "example": 12
                  },
                  "total": {
                    "type": "integer",
                    "example": 123
                  },
                  "count": {
                    "type": "integer",
                    "example": 1
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "next": {
                        "type": "string",
                        "example": "https://krmct001.kartrocket.com/v1/external/orders?page=2"
                      }
                    }
                  },
                  "total_pages": {
                    "type": "integer",
                    "example": 32
                  },
                  "current_page": {
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      },
      "GetCountriesResponse": {
        "title": "Get countries response",
        "required": [
          "data",
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "description": "Status of response from server",
            "format": "int32",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {},
            "description": "Arrayed data",
            "example": [
              {
                "id": 1,
                "name": "Afghanistan",
                "iso_code_2": "AF",
                "iso_code_3": "AFG",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 2,
                "name": "Albania",
                "iso_code_2": "AL",
                "iso_code_3": "ALB",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 3,
                "name": "Algeria",
                "iso_code_2": "DZ",
                "iso_code_3": "DZA",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 4,
                "name": "American Samoa",
                "iso_code_2": "AS",
                "iso_code_3": "ASM",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 5,
                "name": "Andorra",
                "iso_code_2": "AD",
                "iso_code_3": "AND",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 6,
                "name": "Angola",
                "iso_code_2": "AO",
                "iso_code_3": "AGO",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 7,
                "name": "Anguilla",
                "iso_code_2": "AI",
                "iso_code_3": "AIA",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 8,
                "name": "Antarctica",
                "iso_code_2": "AQ",
                "iso_code_3": "ATA",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 9,
                "name": "Antigua and Barbuda",
                "iso_code_2": "AG",
                "iso_code_3": "ATG",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 10,
                "name": "Argentina",
                "iso_code_2": "AR",
                "iso_code_3": "ARG",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 11,
                "name": "Armenia",
                "iso_code_2": "AM",
                "iso_code_3": "ARM",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 12,
                "name": "Aruba",
                "iso_code_2": "AW",
                "iso_code_3": "ABW",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 13,
                "name": "Australia",
                "iso_code_2": "AU",
                "iso_code_3": "AUS",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 14,
                "name": "Austria",
                "iso_code_2": "AT",
                "iso_code_3": "AUT",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 15,
                "name": "Azerbaijan",
                "iso_code_2": "AZ",
                "iso_code_3": "AZE",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 16,
                "name": "Bahamas",
                "iso_code_2": "BS",
                "iso_code_3": "BHS",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 17,
                "name": "Bahrain",
                "iso_code_2": "BH",
                "iso_code_3": "BHR",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 18,
                "name": "Bangladesh",
                "iso_code_2": "BD",
                "iso_code_3": "BGD",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 19,
                "name": "Barbados",
                "iso_code_2": "BB",
                "iso_code_3": "BRB",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 20,
                "name": "Belarus",
                "iso_code_2": "BY",
                "iso_code_3": "BLR",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 21,
                "name": "Belgium",
                "iso_code_2": "BE",
                "iso_code_3": "BEL",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 22,
                "name": "Belize",
                "iso_code_2": "BZ",
                "iso_code_3": "BLZ",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 23,
                "name": "Benin",
                "iso_code_2": "BJ",
                "iso_code_3": "BEN",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 24,
                "name": "Bermuda",
                "iso_code_2": "BM",
                "iso_code_3": "BMU",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 25,
                "name": "Bhutan",
                "iso_code_2": "BT",
                "iso_code_3": "BTN",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 26,
                "name": "Bolivia",
                "iso_code_2": "BO",
                "iso_code_3": "BOL",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 27,
                "name": "Bosnia and Herzegowina",
                "iso_code_2": "BA",
                "iso_code_3": "BIH",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 28,
                "name": "Botswana",
                "iso_code_2": "BW",
                "iso_code_3": "BWA",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 29,
                "name": "Bouvet Island",
                "iso_code_2": "BV",
                "iso_code_3": "BVT",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 30,
                "name": "Brazil",
                "iso_code_2": "BR",
                "iso_code_3": "BRA",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 31,
                "name": "British Indian Ocean Territory",
                "iso_code_2": "IO",
                "iso_code_3": "IOT",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 32,
                "name": "Brunei Darussalam",
                "iso_code_2": "BN",
                "iso_code_3": "BRN",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 33,
                "name": "Bulgaria",
                "iso_code_2": "BG",
                "iso_code_3": "BGR",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 34,
                "name": "Burkina Faso",
                "iso_code_2": "BF",
                "iso_code_3": "BFA",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 35,
                "name": "Burundi",
                "iso_code_2": "BI",
                "iso_code_3": "BDI",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 36,
                "name": "Cambodia",
                "iso_code_2": "KH",
                "iso_code_3": "KHM",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 37,
                "name": "Cameroon",
                "iso_code_2": "CM",
                "iso_code_3": "CMR",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 38,
                "name": "Canada",
                "iso_code_2": "CA",
                "iso_code_3": "CAN",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 39,
                "name": "Cape Verde",
                "iso_code_2": "CV",
                "iso_code_3": "CPV",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              },
              {
                "id": 40,
                "name": "Cayman Islands",
                "iso_code_2": "KY",
                "iso_code_3": "CYM",
                "address_format": "",
                "postcode_required": 0,
                "status": 1
              }
            ]
          }
        }
      },
      "printManifestResponse": {
        "title": "Print Individual Manifests Response",
        "type": "object",
        "properties": {
          "manifest_url": {
            "type": "string",
            "example": "https://s3-ap-southeast-1.amazonaws.com/kr-multichannel/1/manifest/MAN-00212.pdf"
          }
        }
      },
      "UpdateInventoryResponse": {
        "title": "Update inventory response",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "available_quantity": {
                "type": "integer",
                "description": "Shows the quantity which can be shipped"
              },
              "blocked_quantity": {
                "type": "integer",
                "description": "Shows the number of product pieces which cannot be shipped"
              },
              "total_quantity": {
                "type": "integer",
                "description": "Shows the total number of pieces of the product as listed"
              }
            }
          }
        }
      },
      "AwbCreationRequest": {
        "title": "Awb creation request",
        "required": [
          "shipment_id"
        ],
        "type": "object",
        "properties": {
          "shipment_id": {
            "type": "array",
            "items": {
              "type": "integer",
              "description": "The shipment id as generated in the shipment section. Only one Shipment ID per request is allowed from API",
              "format": "int32"
            }
          },
          "courier_id": {
            "type": "integer",
            "description": "The courier id from above",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Use this parameter only to reassign/change the courier. Kindly note that you can reassign only after 24 hours of the previous courier assigned dateTime.",
            "example": "reassign"
          }
        }
      },
      "FulfillmentResponse": {
        "title": "Fulfillment response",
        "required": [
          "data",
          "message",
          "success"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "order_product_id": {
                "type": "integer",
                "example": 321
              },
              "quantity": {
                "type": "string",
                "example": "1"
              },
              "action": {
                "type": "string",
                "example": "add"
              },
              "order_id": {
                "type": "integer",
                "example": 123
              }
            }
          },
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "The api token provided by login api",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}